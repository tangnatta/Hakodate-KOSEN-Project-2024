

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 26 11:36:05 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F88
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F88 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     008F                     	;# 
    89     0090                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009B                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     0105                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001E                     	;# 
   134     001F                     	;# 
   135     0081                     	;# 
   136     0085                     	;# 
   137     0086                     	;# 
   138     008C                     	;# 
   139     008D                     	;# 
   140     008E                     	;# 
   141     008F                     	;# 
   142     0090                     	;# 
   143     0092                     	;# 
   144     0093                     	;# 
   145     0094                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     0105                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     018C                     	;# 
   159     018D                     	;# 
   160     000D                     _PIR2	set	13
   161     000B                     _INTCON	set	11
   162     001F                     _ADCON0	set	31
   163     0006                     _PORTB	set	6
   164     0005                     _PORTA	set	5
   165     0034                     _RB4	set	52
   166     002F                     _RA7	set	47
   167     002E                     _RA6	set	46
   168     002D                     _RA5	set	45
   169     002C                     _RA4	set	44
   170     002B                     _RA3	set	43
   171     002A                     _RA2	set	42
   172     0029                     _RA1	set	41
   173     0028                     _RA0	set	40
   174     0037                     _RB7	set	55
   175     0030                     _RB0	set	48
   176     0032                     _RB2	set	50
   177     0031                     _RB1	set	49
   178     0033                     _RB3	set	51
   179     0035                     _RB5	set	53
   180     0036                     _RB6	set	54
   181     008D                     _PIE2	set	141
   182     009D                     _CVRCON	set	157
   183     009C                     _CMCON	set	156
   184     009F                     _ADCON1	set	159
   185     009B                     _ANSEL	set	155
   186     0086                     _TRISB	set	134
   187     0085                     _TRISA	set	133
   188     008F                     _OSCCON	set	143
   189     0081                     _OPTION_REG	set	129
   190                           
   191                           	psect	cinit
   192     07EF                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07EF                     __initialization:
   196                           
   197                           ; Clear objects allocated to BANK0
   198     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   199     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   200     07F1  01A0               	clrf	__pbssBANK0& (0+127)
   201     07F2  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   202     07F3  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   203     07F4  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   204     07F5  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   205     07F6  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   206     07F7  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   207     07F8  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   208     07F9  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   209     07FA  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   210     07FB  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   211     07FC  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   212     07FD                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215     07FD                     __end_of__initialization:
   216     07FD  0183               	clrf	3
   217     07FE  118A  2F87         	ljmp	_main	;jump to C main() function
   218                           
   219                           	psect	bssBANK0
   220     0020                     __pbssBANK0:
   221     0020                     _BW:
   222     0020                     	ds	2
   223     0022                     _lastSW:
   224     0022                     	ds	2
   225     0024                     _lastBS:
   226     0024                     	ds	2
   227     0026                     _lastWS:
   228     0026                     	ds	2
   229     0028                     _iW:
   230     0028                     	ds	2
   231     002A                     _iB:
   232     002A                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235     0071                     __pcstackCOMMON:
   236     0071                     ?_settings:
   237     0071                     ??_settings:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0071                     ?_kickOut:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0071                     ?_switchLoop:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0071                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0071                     ?_setMotor:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0071                     ?_getValue:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0071                     ?___awmod:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0071                     getValue@current:	
   259                           ; 2 bytes @ 0x0
   260                           
   261     0071                     setMotor@on:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0071                     ___awmod@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267                           
   268                           ; 2 bytes @ 0x0
   269     0071                     	ds	2
   270     0073                     ??_getValue:
   271     0073                     ??_setMotor:	
   272                           ; 1 bytes @ 0x2
   273                           
   274     0073                     ___awmod@dividend:	
   275                           ; 1 bytes @ 0x2
   276                           
   277                           
   278                           ; 2 bytes @ 0x2
   279     0073                     	ds	2
   280     0075                     ??___awmod:
   281     0075                     ___awmod@counter:	
   282                           ; 1 bytes @ 0x4
   283                           
   284                           
   285                           ; 1 bytes @ 0x4
   286     0075                     	ds	1
   287     0076                     ___awmod@sign:
   288                           
   289                           ; 1 bytes @ 0x5
   290     0076                     	ds	1
   291     0077                     ?_display7Seg:
   292     0077                     display7Seg@n:	
   293                           ; 1 bytes @ 0x6
   294                           
   295                           
   296                           ; 2 bytes @ 0x6
   297     0077                     	ds	2
   298     0079                     ??_display7Seg:
   299     0079                     display7Seg@one:	
   300                           ; 1 bytes @ 0x8
   301                           
   302                           
   303                           ; 2 bytes @ 0x8
   304     0079                     	ds	2
   305     007B                     display7Seg@ten:
   306                           
   307                           ; 2 bytes @ 0xA
   308     007B                     	ds	2
   309                           
   310                           	psect	cstackBANK0
   311     002C                     __pcstackBANK0:
   312     002C                     ??_switchLoop:
   313                           
   314                           ; 1 bytes @ 0x0
   315     002C                     	ds	2
   316     002E                     ??_kickOut:
   317                           
   318                           ; 1 bytes @ 0x2
   319     002E                     	ds	2
   320     0030                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x4
   323     0030                     	ds	2
   324                           
   325                           	psect	maintext
   326     0787                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 85 in file "PIC16F88_test.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          0       2       0       0       0
   349 ;;      Totals:         0       2       0       0       0
   350 ;;Total ram usage:        2 bytes
   351 ;; Hardware stack levels required when called: 4
   352 ;; This function calls:
   353 ;;		_getValue
   354 ;;		_kickOut
   355 ;;		_settings
   356 ;;		_switchLoop
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362     0787                     _main:	
   363                           ;psect for function _main
   364                           
   365     0787                     l1055:	
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   368                           
   369                           
   370                           ;PIC16F88_test.c: 86:     settings();
   371     0787  118A  2649  118A   	fcall	_settings
   372     078A                     l1057:
   373                           
   374                           ;PIC16F88_test.c: 88:     kickOut();
   375     078A  118A  266E  118A   	fcall	_kickOut
   376     078D                     l1059:
   377                           
   378                           ;PIC16F88_test.c: 91:         if (RB6 && !lastWS){
   379     078D  1283               	bcf	3,5	;RP0=0, select bank0
   380     078E  1303               	bcf	3,6	;RP1=0, select bank0
   381     078F  1F06               	btfss	6,6	;volatile
   382     0790  2F92               	goto	u451
   383     0791  2F93               	goto	u450
   384     0792                     u451:
   385     0792  2F9F               	goto	l1065
   386     0793                     u450:
   387     0793                     l1061:
   388     0793  0826               	movf	_lastWS,w
   389     0794  0427               	iorwf	_lastWS+1,w
   390     0795  1D03               	btfss	3,2
   391     0796  2F98               	goto	u461
   392     0797  2F99               	goto	u460
   393     0798                     u461:
   394     0798  2F9F               	goto	l1065
   395     0799                     u460:
   396     0799                     l1063:
   397                           
   398                           ;PIC16F88_test.c: 92:             iW++;
   399     0799  3001               	movlw	1
   400     079A  07A8               	addwf	_iW,f
   401     079B  1803               	skipnc
   402     079C  0AA9               	incf	_iW+1,f
   403     079D  3000               	movlw	0
   404     079E  07A9               	addwf	_iW+1,f
   405     079F                     l1065:
   406                           
   407                           ;PIC16F88_test.c: 94:         if (RB5 && !lastBS){
   408     079F  1E86               	btfss	6,5	;volatile
   409     07A0  2FA2               	goto	u471
   410     07A1  2FA3               	goto	u470
   411     07A2                     u471:
   412     07A2  2FB2               	goto	l1073
   413     07A3                     u470:
   414     07A3                     l1067:
   415     07A3  0824               	movf	_lastBS,w
   416     07A4  0425               	iorwf	_lastBS+1,w
   417     07A5  1D03               	btfss	3,2
   418     07A6  2FA8               	goto	u481
   419     07A7  2FA9               	goto	u480
   420     07A8                     u481:
   421     07A8  2FB2               	goto	l1073
   422     07A9                     u480:
   423     07A9                     l1069:
   424                           
   425                           ;PIC16F88_test.c: 95:             iB++;
   426     07A9  3001               	movlw	1
   427     07AA  07AA               	addwf	_iB,f
   428     07AB  1803               	skipnc
   429     07AC  0AAB               	incf	_iB+1,f
   430     07AD  3000               	movlw	0
   431     07AE  07AB               	addwf	_iB+1,f
   432     07AF                     l1071:
   433                           
   434                           ;PIC16F88_test.c: 98:             kickOut();
   435     07AF  118A  266E  118A   	fcall	_kickOut
   436     07B2                     l1073:
   437                           
   438                           ;PIC16F88_test.c: 101:         switchLoop();
   439     07B2  118A  272E  118A   	fcall	_switchLoop
   440     07B5                     l1075:
   441                           
   442                           ;PIC16F88_test.c: 104:         lastWS = getValue(RB6);
   443     07B5  1003               	clrc
   444     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   445     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   446     07B8  1B06               	btfsc	6,6	;volatile
   447     07B9  1403               	setc
   448     07BA  3000               	movlw	0
   449     07BB  1803               	skipnc
   450     07BC  3001               	movlw	1
   451     07BD  00B0               	movwf	??_main
   452     07BE  01B1               	clrf	??_main+1
   453     07BF  0830               	movf	??_main,w
   454     07C0  00F1               	movwf	getValue@current
   455     07C1  0831               	movf	??_main+1,w
   456     07C2  00F2               	movwf	getValue@current+1
   457     07C3  118A  262B  118A   	fcall	_getValue
   458     07C6  0872               	movf	?_getValue+1,w
   459     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   460     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   461     07C9  00A7               	movwf	_lastWS+1
   462     07CA  0871               	movf	?_getValue,w
   463     07CB  00A6               	movwf	_lastWS
   464     07CC                     l1077:
   465                           
   466                           ;PIC16F88_test.c: 105:         lastBS = getValue(RB5);
   467     07CC  1003               	clrc
   468     07CD  1A86               	btfsc	6,5	;volatile
   469     07CE  1403               	setc
   470     07CF  3000               	movlw	0
   471     07D0  1803               	skipnc
   472     07D1  3001               	movlw	1
   473     07D2  00B0               	movwf	??_main
   474     07D3  01B1               	clrf	??_main+1
   475     07D4  0830               	movf	??_main,w
   476     07D5  00F1               	movwf	getValue@current
   477     07D6  0831               	movf	??_main+1,w
   478     07D7  00F2               	movwf	getValue@current+1
   479     07D8  118A  262B  118A   	fcall	_getValue
   480     07DB  0872               	movf	?_getValue+1,w
   481     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   482     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   483     07DE  00A5               	movwf	_lastBS+1
   484     07DF  0871               	movf	?_getValue,w
   485     07E0  00A4               	movwf	_lastBS
   486                           
   487                           ;PIC16F88_test.c: 108:         _delay((unsigned long)((9)*(4000000/4000.0)));
   488     07E1  300C               	movlw	12
   489     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   490     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   491     07E4  00B1               	movwf	??_main+1
   492     07E5  30AE               	movlw	174
   493     07E6  00B0               	movwf	??_main
   494     07E7                     u497:
   495     07E7  0BB0               	decfsz	??_main,f
   496     07E8  2FE7               	goto	u497
   497     07E9  0BB1               	decfsz	??_main+1,f
   498     07EA  2FE7               	goto	u497
   499     07EB  0000               	nop
   500                           
   501                           ;PIC16F88_test.c: 109:     }
   502     07EC  2F8D               	goto	l1059
   503     07ED  118A  2801         	ljmp	start
   504     07EF                     __end_of_main:
   505                           
   506                           	psect	text1
   507     0649                     __ptext1:	
   508 ;; *************** function _settings *****************
   509 ;; Defined at:
   510 ;;		line 191 in file "PIC16F88_test.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0649                     _settings:	
   538                           ;psect for function _settings
   539                           
   540     0649                     l1021:	
   541                           ;incstack = 0
   542                           ; Regs used in _settings: [wreg+status,2]
   543                           
   544                           
   545                           ;PIC16F88_test.c: 193:     OPTION_REG = 0b11000000;
   546     0649  30C0               	movlw	192
   547     064A  1683               	bsf	3,5	;RP0=1, select bank1
   548     064B  1303               	bcf	3,6	;RP1=0, select bank1
   549     064C  0081               	movwf	1	;volatile
   550                           
   551                           ;PIC16F88_test.c: 210:     OSCCON = 0b01100000;
   552     064D  3060               	movlw	96
   553     064E  008F               	movwf	15	;volatile
   554     064F                     l1023:
   555                           
   556                           ;PIC16F88_test.c: 225:     TRISA = 0b00000000;
   557     064F  0185               	clrf	5	;volatile
   558     0650                     l1025:
   559                           
   560                           ;PIC16F88_test.c: 237:     PORTA = 0b00000000;
   561     0650  1283               	bcf	3,5	;RP0=0, select bank0
   562     0651  1303               	bcf	3,6	;RP1=0, select bank0
   563     0652  0185               	clrf	5	;volatile
   564                           
   565                           ;PIC16F88_test.c: 250:     TRISB = 0b01111000;
   566     0653  3078               	movlw	120
   567     0654  1683               	bsf	3,5	;RP0=1, select bank1
   568     0655  1303               	bcf	3,6	;RP1=0, select bank1
   569     0656  0086               	movwf	6	;volatile
   570     0657                     l1027:
   571                           
   572                           ;PIC16F88_test.c: 262:     PORTB = 0b00000000;
   573     0657  1283               	bcf	3,5	;RP0=0, select bank0
   574     0658  1303               	bcf	3,6	;RP1=0, select bank0
   575     0659  0186               	clrf	6	;volatile
   576     065A                     l1029:
   577                           
   578                           ;PIC16F88_test.c: 275:     ANSEL = 0b00000000;
   579     065A  1683               	bsf	3,5	;RP0=1, select bank1
   580     065B  1303               	bcf	3,6	;RP1=0, select bank1
   581     065C  019B               	clrf	27	;volatile
   582     065D                     l1031:
   583                           
   584                           ;PIC16F88_test.c: 286:     ADCON0 = 0b00000000;
   585     065D  1283               	bcf	3,5	;RP0=0, select bank0
   586     065E  1303               	bcf	3,6	;RP1=0, select bank0
   587     065F  019F               	clrf	31	;volatile
   588     0660                     l1033:
   589                           
   590                           ;PIC16F88_test.c: 298:     ADCON1 = 0b00000000;
   591     0660  1683               	bsf	3,5	;RP0=1, select bank1
   592     0661  1303               	bcf	3,6	;RP1=0, select bank1
   593     0662  019F               	clrf	31	;volatile
   594                           
   595                           ;PIC16F88_test.c: 313:     CMCON = 0b00000111;
   596     0663  3007               	movlw	7
   597     0664  009C               	movwf	28	;volatile
   598     0665                     l1035:
   599                           
   600                           ;PIC16F88_test.c: 324:     CVRCON = 0b00000000;
   601     0665  019D               	clrf	29	;volatile
   602     0666                     l1037:
   603                           
   604                           ;PIC16F88_test.c: 339:     INTCON = 0b00000000;
   605     0666  018B               	clrf	11	;volatile
   606     0667                     l1039:
   607                           
   608                           ;PIC16F88_test.c: 358:     PIR2 = 0b00000000;
   609     0667  1283               	bcf	3,5	;RP0=0, select bank0
   610     0668  1303               	bcf	3,6	;RP1=0, select bank0
   611     0669  018D               	clrf	13	;volatile
   612     066A                     l1041:
   613                           
   614                           ;PIC16F88_test.c: 372:     PIE2 = 0b00000000;
   615     066A  1683               	bsf	3,5	;RP0=1, select bank1
   616     066B  1303               	bcf	3,6	;RP1=0, select bank1
   617     066C  018D               	clrf	13	;volatile
   618     066D                     l123:
   619     066D  0008               	return
   620     066E                     __end_of_settings:
   621                           
   622                           	psect	text2
   623     066E                     __ptext2:	
   624 ;; *************** function _kickOut *****************
   625 ;; Defined at:
   626 ;;		line 180 in file "PIC16F88_test.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       2       0       0       0
   643 ;;      Totals:         0       2       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 3
   647 ;; This function calls:
   648 ;;		_setMotor
   649 ;;		_switchLoop
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     066E                     _kickOut:	
   656                           ;psect for function _kickOut
   657                           
   658     066E                     l1043:	
   659                           ;incstack = 0
   660                           ; Regs used in _kickOut: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   661                           
   662                           
   663                           ;PIC16F88_test.c: 181:     setMotor(1);
   664     066E  3001               	movlw	1
   665     066F  00F1               	movwf	setMotor@on
   666     0670  3000               	movlw	0
   667     0671  00F2               	movwf	setMotor@on+1
   668     0672  118A  2639  118A   	fcall	_setMotor
   669     0675                     l1045:
   670                           
   671                           ;PIC16F88_test.c: 182:     _delay((unsigned long)((99)*(4000000/4000.0)));
   672     0675  3081               	movlw	129
   673     0676  1283               	bcf	3,5	;RP0=0, select bank0
   674     0677  1303               	bcf	3,6	;RP1=0, select bank0
   675     0678  00AF               	movwf	??_kickOut+1
   676     0679  3090               	movlw	144
   677     067A  00AE               	movwf	??_kickOut
   678     067B                     u507:
   679     067B  0BAE               	decfsz	??_kickOut,f
   680     067C  2E7B               	goto	u507
   681     067D  0BAF               	decfsz	??_kickOut+1,f
   682     067E  2E7B               	goto	u507
   683     067F  0000               	nop
   684                           
   685                           ;PIC16F88_test.c: 183:     while (RB4==0){
   686     0680  2E8F               	goto	l1051
   687     0681                     l1047:
   688                           
   689                           ;PIC16F88_test.c: 184:         switchLoop();
   690     0681  118A  272E  118A   	fcall	_switchLoop
   691     0684                     l1049:
   692                           
   693                           ;PIC16F88_test.c: 185:         _delay((unsigned long)((9)*(4000000/4000.0)));
   694     0684  300C               	movlw	12
   695     0685  1283               	bcf	3,5	;RP0=0, select bank0
   696     0686  1303               	bcf	3,6	;RP1=0, select bank0
   697     0687  00AF               	movwf	??_kickOut+1
   698     0688  30AE               	movlw	174
   699     0689  00AE               	movwf	??_kickOut
   700     068A                     u517:
   701     068A  0BAE               	decfsz	??_kickOut,f
   702     068B  2E8A               	goto	u517
   703     068C  0BAF               	decfsz	??_kickOut+1,f
   704     068D  2E8A               	goto	u517
   705     068E  0000               	nop
   706     068F                     l1051:
   707                           
   708                           ;PIC16F88_test.c: 183:     while (RB4==0){
   709     068F  1283               	bcf	3,5	;RP0=0, select bank0
   710     0690  1303               	bcf	3,6	;RP1=0, select bank0
   711     0691  1E06               	btfss	6,4	;volatile
   712     0692  2E94               	goto	u441
   713     0693  2E95               	goto	u440
   714     0694                     u441:
   715     0694  2E81               	goto	l1047
   716     0695                     u440:
   717     0695                     l1053:
   718                           
   719                           ;PIC16F88_test.c: 187:     setMotor(0);
   720     0695  3000               	movlw	0
   721     0696  00F1               	movwf	setMotor@on
   722     0697  00F2               	movwf	setMotor@on+1
   723     0698  118A  2639  118A   	fcall	_setMotor
   724     069B                     l120:
   725     069B  0008               	return
   726     069C                     __end_of_kickOut:
   727                           
   728                           	psect	text3
   729     072E                     __ptext3:	
   730 ;; *************** function _switchLoop *****************
   731 ;; Defined at:
   732 ;;		line 112 in file "PIC16F88_test.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       2       0       0       0
   749 ;;      Totals:         0       2       0       0       0
   750 ;;Total ram usage:        2 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 2
   753 ;; This function calls:
   754 ;;		_display7Seg
   755 ;;		_getValue
   756 ;; This function is called by:
   757 ;;		_main
   758 ;;		_kickOut
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762     072E                     _switchLoop:	
   763                           ;psect for function _switchLoop
   764                           
   765     072E                     l981:	
   766                           ;incstack = 0
   767                           ; Regs used in _switchLoop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   768                           
   769                           
   770                           ;PIC16F88_test.c: 114:     if (RB3 && !lastSW){
   771     072E  1283               	bcf	3,5	;RP0=0, select bank0
   772     072F  1303               	bcf	3,6	;RP1=0, select bank0
   773     0730  1D86               	btfss	6,3	;volatile
   774     0731  2F33               	goto	u391
   775     0732  2F34               	goto	u390
   776     0733                     u391:
   777     0733  2F64               	goto	l1009
   778     0734                     u390:
   779     0734                     l983:
   780     0734  0822               	movf	_lastSW,w
   781     0735  0423               	iorwf	_lastSW+1,w
   782     0736  1D03               	btfss	3,2
   783     0737  2F39               	goto	u401
   784     0738  2F3A               	goto	u400
   785     0739                     u401:
   786     0739  2F64               	goto	l1009
   787     073A                     u400:
   788     073A                     l985:
   789                           
   790                           ;PIC16F88_test.c: 115:         BW=!BW;
   791     073A  0820               	movf	_BW,w
   792     073B  0421               	iorwf	_BW+1,w
   793     073C  1903               	btfsc	3,2
   794     073D  2F3F               	goto	u411
   795     073E  2F41               	goto	u410
   796     073F                     u411:
   797     073F  3001               	movlw	1
   798     0740  2F42               	goto	u420
   799     0741                     u410:
   800     0741  3000               	movlw	0
   801     0742                     u420:
   802     0742  00AC               	movwf	??_switchLoop
   803     0743  01AD               	clrf	??_switchLoop+1
   804     0744  082C               	movf	??_switchLoop,w
   805     0745  00A0               	movwf	_BW
   806     0746  082D               	movf	??_switchLoop+1,w
   807     0747  00A1               	movwf	_BW+1
   808     0748  2F64               	goto	l1009
   809     0749                     l987:
   810                           
   811                           ;PIC16F88_test.c: 121:             display7Seg(iW);
   812     0749  0829               	movf	_iW+1,w
   813     074A  00F8               	movwf	display7Seg@n+1
   814     074B  0828               	movf	_iW,w
   815     074C  00F7               	movwf	display7Seg@n
   816     074D  118A  269C  118A   	fcall	_display7Seg
   817     0750                     l989:
   818                           
   819                           ;PIC16F88_test.c: 122:             RB1=1;
   820     0750  1283               	bcf	3,5	;RP0=0, select bank0
   821     0751  1303               	bcf	3,6	;RP1=0, select bank0
   822     0752  1486               	bsf	6,1	;volatile
   823     0753                     l991:
   824                           
   825                           ;PIC16F88_test.c: 123:             RB2=0;
   826     0753  1106               	bcf	6,2	;volatile
   827                           
   828                           ;PIC16F88_test.c: 124:             break;
   829     0754  2F71               	goto	l1011
   830     0755                     l993:
   831                           
   832                           ;PIC16F88_test.c: 127:             display7Seg(iB);
   833     0755  082B               	movf	_iB+1,w
   834     0756  00F8               	movwf	display7Seg@n+1
   835     0757  082A               	movf	_iB,w
   836     0758  00F7               	movwf	display7Seg@n
   837     0759  118A  269C  118A   	fcall	_display7Seg
   838     075C                     l995:
   839                           
   840                           ;PIC16F88_test.c: 128:             RB1=0;
   841     075C  1283               	bcf	3,5	;RP0=0, select bank0
   842     075D  1303               	bcf	3,6	;RP1=0, select bank0
   843     075E  1086               	bcf	6,1	;volatile
   844     075F                     l997:
   845                           
   846                           ;PIC16F88_test.c: 129:             RB2=1;
   847     075F  1506               	bsf	6,2	;volatile
   848                           
   849                           ;PIC16F88_test.c: 130:             break;
   850     0760  2F71               	goto	l1011
   851     0761                     l999:
   852                           
   853                           ;PIC16F88_test.c: 133:             BW=0;
   854     0761  01A0               	clrf	_BW
   855     0762  01A1               	clrf	_BW+1
   856     0763  2F49               	goto	l987
   857     0764                     l1009:
   858                           
   859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   860                           ; Switch size 1, requested type "simple"
   861                           ; Number of cases is 1, Range of values is 0 to 0
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte            4     3 (average)
   865                           ; direct_byte            9     7 (fixed)
   866                           ; jumptable            260     6 (fixed)
   867                           ;	Chosen strategy is simple_byte
   868     0764  0821               	movf	_BW+1,w
   869     0765  3A00               	xorlw	0	; case 0
   870     0766  1903               	skipnz
   871     0767  2F69               	goto	l1099
   872     0768  2F61               	goto	l999
   873     0769                     l1099:
   874                           
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 2, Range of values is 0 to 1
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            7     4 (average)
   880                           ; direct_byte           11     7 (fixed)
   881                           ; jumptable            260     6 (fixed)
   882                           ;	Chosen strategy is simple_byte
   883     0769  0820               	movf	_BW,w
   884     076A  3A00               	xorlw	0	; case 0
   885     076B  1903               	skipnz
   886     076C  2F49               	goto	l987
   887     076D  3A01               	xorlw	1	; case 1
   888     076E  1903               	skipnz
   889     076F  2F55               	goto	l993
   890     0770  2F61               	goto	l999
   891     0771                     l1011:
   892                           
   893                           ;PIC16F88_test.c: 141:     lastSW = getValue(RB3);
   894     0771  1003               	clrc
   895     0772  1986               	btfsc	6,3	;volatile
   896     0773  1403               	setc
   897     0774  3000               	movlw	0
   898     0775  1803               	skipnc
   899     0776  3001               	movlw	1
   900     0777  00AC               	movwf	??_switchLoop
   901     0778  01AD               	clrf	??_switchLoop+1
   902     0779  082C               	movf	??_switchLoop,w
   903     077A  00F1               	movwf	getValue@current
   904     077B  082D               	movf	??_switchLoop+1,w
   905     077C  00F2               	movwf	getValue@current+1
   906     077D  118A  262B  118A   	fcall	_getValue
   907     0780  0872               	movf	?_getValue+1,w
   908     0781  1283               	bcf	3,5	;RP0=0, select bank0
   909     0782  1303               	bcf	3,6	;RP1=0, select bank0
   910     0783  00A3               	movwf	_lastSW+1
   911     0784  0871               	movf	?_getValue,w
   912     0785  00A2               	movwf	_lastSW
   913     0786                     l102:
   914     0786  0008               	return
   915     0787                     __end_of_switchLoop:
   916                           
   917                           	psect	text4
   918     062B                     __ptext4:	
   919 ;; *************** function _getValue *****************
   920 ;; Defined at:
   921 ;;		line 144 in file "PIC16F88_test.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  current         2    0[COMMON] int 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2    0[COMMON] int 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         2       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         2       0       0       0       0
   939 ;;Total ram usage:        2 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_main
   945 ;;		_switchLoop
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949     062B                     _getValue:	
   950                           ;psect for function _getValue
   951                           
   952     062B                     l951:	
   953                           ;incstack = 0
   954                           ; Regs used in _getValue: [wreg+status,2+status,0]
   955                           
   956                           
   957                           ;PIC16F88_test.c: 145:     if (current){
   958     062B  0871               	movf	getValue@current,w
   959     062C  0472               	iorwf	getValue@current+1,w
   960     062D  1903               	btfsc	3,2
   961     062E  2E30               	goto	u341
   962     062F  2E31               	goto	u340
   963     0630                     u341:
   964     0630  2E36               	goto	l959
   965     0631                     u340:
   966     0631                     l953:
   967                           
   968                           ;PIC16F88_test.c: 146:         return 1;
   969     0631  3001               	movlw	1
   970     0632  00F1               	movwf	?_getValue
   971     0633  3000               	movlw	0
   972     0634  00F2               	movwf	?_getValue+1
   973     0635  2E38               	goto	l106
   974     0636                     l959:
   975                           
   976                           ;PIC16F88_test.c: 149:         return 0;
   977     0636  01F1               	clrf	?_getValue
   978     0637  01F2               	clrf	?_getValue+1
   979     0638                     l106:
   980     0638  0008               	return
   981     0639                     __end_of_getValue:
   982                           
   983                           	psect	text5
   984     069C                     __ptext5:	
   985 ;; *************** function _display7Seg *****************
   986 ;; Defined at:
   987 ;;		line 163 in file "PIC16F88_test.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  n               2    6[COMMON] int 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  ten             2   10[COMMON] int 
   992 ;;  one             2    8[COMMON] int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         2       0       0       0       0
  1003 ;;      Locals:         4       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         6       0       0       0       0
  1006 ;;Total ram usage:        6 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 1
  1009 ;; This function calls:
  1010 ;;		___awmod
  1011 ;; This function is called by:
  1012 ;;		_switchLoop
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     069C                     _display7Seg:	
  1017                           ;psect for function _display7Seg
  1018                           
  1019     069C                     l963:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _display7Seg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1022                           
  1023                           
  1024                           ;PIC16F88_test.c: 164:     int one = n%10;
  1025     069C  300A               	movlw	10
  1026     069D  00F1               	movwf	___awmod@divisor
  1027     069E  3000               	movlw	0
  1028     069F  00F2               	movwf	___awmod@divisor+1
  1029     06A0  0878               	movf	display7Seg@n+1,w
  1030     06A1  00F4               	movwf	___awmod@dividend+1
  1031     06A2  0877               	movf	display7Seg@n,w
  1032     06A3  00F3               	movwf	___awmod@dividend
  1033     06A4  118A  26D5  118A   	fcall	___awmod
  1034     06A7  0872               	movf	?___awmod+1,w
  1035     06A8  00FA               	movwf	display7Seg@one+1
  1036     06A9  0871               	movf	?___awmod,w
  1037     06AA  00F9               	movwf	display7Seg@one
  1038                           
  1039                           ;PIC16F88_test.c: 165:     int ten = n%100;
  1040     06AB  3064               	movlw	100
  1041     06AC  00F1               	movwf	___awmod@divisor
  1042     06AD  3000               	movlw	0
  1043     06AE  00F2               	movwf	___awmod@divisor+1
  1044     06AF  0878               	movf	display7Seg@n+1,w
  1045     06B0  00F4               	movwf	___awmod@dividend+1
  1046     06B1  0877               	movf	display7Seg@n,w
  1047     06B2  00F3               	movwf	___awmod@dividend
  1048     06B3  118A  26D5  118A   	fcall	___awmod
  1049     06B6  0872               	movf	?___awmod+1,w
  1050     06B7  00FC               	movwf	display7Seg@ten+1
  1051     06B8  0871               	movf	?___awmod,w
  1052     06B9  00FB               	movwf	display7Seg@ten
  1053     06BA                     l965:
  1054                           
  1055                           ;PIC16F88_test.c: 168:     RA0=((one) & (1 << (0)));
  1056     06BA  1879               	btfsc	display7Seg@one,0
  1057     06BB  2EBD               	goto	u351
  1058     06BC  2EC1               	goto	u350
  1059     06BD                     u351:
  1060     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1061     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1062     06BF  1405               	bsf	5,0	;volatile
  1063     06C0  2EC4               	goto	u364
  1064     06C1                     u350:
  1065     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1066     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1067     06C3  1005               	bcf	5,0	;volatile
  1068     06C4                     u364:
  1069     06C4                     l967:
  1070                           
  1071                           ;PIC16F88_test.c: 169:     RA1=((one) & (1 << (1)));
  1072     06C4  1085               	bcf	5,1	;volatile
  1073     06C5                     l969:
  1074                           
  1075                           ;PIC16F88_test.c: 170:     RA2=((one) & (1 << (2)));
  1076     06C5  1105               	bcf	5,2	;volatile
  1077     06C6                     l971:
  1078                           
  1079                           ;PIC16F88_test.c: 171:     RA3=((one) & (1 << (3)));
  1080     06C6  1185               	bcf	5,3	;volatile
  1081     06C7                     l973:
  1082                           
  1083                           ;PIC16F88_test.c: 174:     RA4=((ten) & (1 << (0)));
  1084     06C7  187B               	btfsc	display7Seg@ten,0
  1085     06C8  2ECA               	goto	u371
  1086     06C9  2ECE               	goto	u370
  1087     06CA                     u371:
  1088     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1089     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1090     06CC  1605               	bsf	5,4	;volatile
  1091     06CD  2ED1               	goto	u384
  1092     06CE                     u370:
  1093     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1094     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1095     06D0  1205               	bcf	5,4	;volatile
  1096     06D1                     u384:
  1097     06D1                     l975:
  1098                           
  1099                           ;PIC16F88_test.c: 175:     RA5=((ten) & (1 << (1)));
  1100     06D1  1285               	bcf	5,5	;volatile
  1101     06D2                     l977:
  1102                           
  1103                           ;PIC16F88_test.c: 176:     RA6=((ten) & (1 << (2)));
  1104     06D2  1305               	bcf	5,6	;volatile
  1105     06D3                     l979:
  1106                           
  1107                           ;PIC16F88_test.c: 177:     RA7=((ten) & (1 << (3)));
  1108     06D3  1385               	bcf	5,7	;volatile
  1109     06D4                     l114:
  1110     06D4  0008               	return
  1111     06D5                     __end_of_display7Seg:
  1112                           
  1113                           	psect	text6
  1114     06D5                     __ptext6:	
  1115 ;; *************** function ___awmod *****************
  1116 ;; Defined at:
  1117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  divisor         2    0[COMMON] int 
  1120 ;;  dividend        2    2[COMMON] int 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  sign            1    5[COMMON] unsigned char 
  1123 ;;  counter         1    4[COMMON] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2    0[COMMON] int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, btemp+1
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         4       0       0       0       0
  1134 ;;      Locals:         2       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0
  1136 ;;      Totals:         6       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_display7Seg
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146     06D5                     ___awmod:	
  1147                           ;psect for function ___awmod
  1148                           
  1149     06D5                     l913:	
  1150                           ;incstack = 0
  1151                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1152                           
  1153     06D5  01F6               	clrf	___awmod@sign
  1154     06D6                     l915:
  1155     06D6  1FF4               	btfss	___awmod@dividend+1,7
  1156     06D7  2ED9               	goto	u251
  1157     06D8  2EDA               	goto	u250
  1158     06D9                     u251:
  1159     06D9  2EE1               	goto	l921
  1160     06DA                     u250:
  1161     06DA                     l917:
  1162     06DA  09F3               	comf	___awmod@dividend,f
  1163     06DB  09F4               	comf	___awmod@dividend+1,f
  1164     06DC  0AF3               	incf	___awmod@dividend,f
  1165     06DD  1903               	skipnz
  1166     06DE  0AF4               	incf	___awmod@dividend+1,f
  1167     06DF                     l919:
  1168     06DF  01F6               	clrf	___awmod@sign
  1169     06E0  0AF6               	incf	___awmod@sign,f
  1170     06E1                     l921:
  1171     06E1  1FF2               	btfss	___awmod@divisor+1,7
  1172     06E2  2EE4               	goto	u261
  1173     06E3  2EE5               	goto	u260
  1174     06E4                     u261:
  1175     06E4  2EEA               	goto	l925
  1176     06E5                     u260:
  1177     06E5                     l923:
  1178     06E5  09F1               	comf	___awmod@divisor,f
  1179     06E6  09F2               	comf	___awmod@divisor+1,f
  1180     06E7  0AF1               	incf	___awmod@divisor,f
  1181     06E8  1903               	skipnz
  1182     06E9  0AF2               	incf	___awmod@divisor+1,f
  1183     06EA                     l925:
  1184     06EA  0871               	movf	___awmod@divisor,w
  1185     06EB  0472               	iorwf	___awmod@divisor+1,w
  1186     06EC  1903               	btfsc	3,2
  1187     06ED  2EEF               	goto	u271
  1188     06EE  2EF0               	goto	u270
  1189     06EF                     u271:
  1190     06EF  2F1F               	goto	l943
  1191     06F0                     u270:
  1192     06F0                     l927:
  1193     06F0  01F5               	clrf	___awmod@counter
  1194     06F1  0AF5               	incf	___awmod@counter,f
  1195     06F2  2EFE               	goto	l933
  1196     06F3                     l929:
  1197     06F3  3001               	movlw	1
  1198     06F4                     u285:
  1199     06F4  1003               	clrc
  1200     06F5  0DF1               	rlf	___awmod@divisor,f
  1201     06F6  0DF2               	rlf	___awmod@divisor+1,f
  1202     06F7  3EFF               	addlw	-1
  1203     06F8  1D03               	skipz
  1204     06F9  2EF4               	goto	u285
  1205     06FA                     l931:
  1206     06FA  3001               	movlw	1
  1207     06FB  00FF               	movwf	btemp+1
  1208     06FC  087F               	movf	btemp+1,w
  1209     06FD  07F5               	addwf	___awmod@counter,f
  1210     06FE                     l933:
  1211     06FE  1FF2               	btfss	___awmod@divisor+1,7
  1212     06FF  2F01               	goto	u291
  1213     0700  2F02               	goto	u290
  1214     0701                     u291:
  1215     0701  2EF3               	goto	l929
  1216     0702                     u290:
  1217     0702                     l935:
  1218     0702  0872               	movf	___awmod@divisor+1,w
  1219     0703  0274               	subwf	___awmod@dividend+1,w
  1220     0704  1D03               	skipz
  1221     0705  2F08               	goto	u305
  1222     0706  0871               	movf	___awmod@divisor,w
  1223     0707  0273               	subwf	___awmod@dividend,w
  1224     0708                     u305:
  1225     0708  1C03               	skipc
  1226     0709  2F0B               	goto	u301
  1227     070A  2F0C               	goto	u300
  1228     070B                     u301:
  1229     070B  2F12               	goto	l939
  1230     070C                     u300:
  1231     070C                     l937:
  1232     070C  0871               	movf	___awmod@divisor,w
  1233     070D  02F3               	subwf	___awmod@dividend,f
  1234     070E  0872               	movf	___awmod@divisor+1,w
  1235     070F  1C03               	skipc
  1236     0710  03F4               	decf	___awmod@dividend+1,f
  1237     0711  02F4               	subwf	___awmod@dividend+1,f
  1238     0712                     l939:
  1239     0712  3001               	movlw	1
  1240     0713                     u315:
  1241     0713  1003               	clrc
  1242     0714  0CF2               	rrf	___awmod@divisor+1,f
  1243     0715  0CF1               	rrf	___awmod@divisor,f
  1244     0716  3EFF               	addlw	-1
  1245     0717  1D03               	skipz
  1246     0718  2F13               	goto	u315
  1247     0719                     l941:
  1248     0719  3001               	movlw	1
  1249     071A  02F5               	subwf	___awmod@counter,f
  1250     071B  1D03               	btfss	3,2
  1251     071C  2F1E               	goto	u321
  1252     071D  2F1F               	goto	u320
  1253     071E                     u321:
  1254     071E  2F02               	goto	l935
  1255     071F                     u320:
  1256     071F                     l943:
  1257     071F  0876               	movf	___awmod@sign,w
  1258     0720  1903               	btfsc	3,2
  1259     0721  2F23               	goto	u331
  1260     0722  2F24               	goto	u330
  1261     0723                     u331:
  1262     0723  2F29               	goto	l947
  1263     0724                     u330:
  1264     0724                     l945:
  1265     0724  09F3               	comf	___awmod@dividend,f
  1266     0725  09F4               	comf	___awmod@dividend+1,f
  1267     0726  0AF3               	incf	___awmod@dividend,f
  1268     0727  1903               	skipnz
  1269     0728  0AF4               	incf	___awmod@dividend+1,f
  1270     0729                     l947:
  1271     0729  0874               	movf	___awmod@dividend+1,w
  1272     072A  00F2               	movwf	?___awmod+1
  1273     072B  0873               	movf	___awmod@dividend,w
  1274     072C  00F1               	movwf	?___awmod
  1275     072D                     l375:
  1276     072D  0008               	return
  1277     072E                     __end_of___awmod:
  1278                           
  1279                           	psect	text7
  1280     0639                     __ptext7:	
  1281 ;; *************** function _setMotor *****************
  1282 ;; Defined at:
  1283 ;;		line 153 in file "PIC16F88_test.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  on              2    0[COMMON] int 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         2       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0
  1300 ;;      Totals:         2       0       0       0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_kickOut
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310     0639                     _setMotor:	
  1311                           ;psect for function _setMotor
  1312                           
  1313     0639                     l1017:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _setMotor: [wreg+status,2+status,0]
  1316                           
  1317                           
  1318                           ;PIC16F88_test.c: 154:     if (on){
  1319     0639  0871               	movf	setMotor@on,w
  1320     063A  0472               	iorwf	setMotor@on+1,w
  1321     063B  1903               	btfsc	3,2
  1322     063C  2E3E               	goto	u431
  1323     063D  2E3F               	goto	u430
  1324     063E                     u431:
  1325     063E  2E44               	goto	l110
  1326     063F                     u430:
  1327     063F                     l1019:
  1328                           
  1329                           ;PIC16F88_test.c: 155:         RB0=0;
  1330     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1332     0641  1006               	bcf	6,0	;volatile
  1333                           
  1334                           ;PIC16F88_test.c: 156:         RB7=1;
  1335     0642  1786               	bsf	6,7	;volatile
  1336                           
  1337                           ;PIC16F88_test.c: 157:         return;
  1338     0643  2E48               	goto	l111
  1339     0644                     l110:	
  1340                           ;PIC16F88_test.c: 158:     }
  1341                           
  1342                           
  1343                           ;PIC16F88_test.c: 159:     RB0=1;
  1344     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0646  1406               	bsf	6,0	;volatile
  1347                           
  1348                           ;PIC16F88_test.c: 160:     RB7=1;
  1349     0647  1786               	bsf	6,7	;volatile
  1350     0648                     l111:
  1351     0648  0008               	return
  1352     0649                     __end_of_setMotor:
  1353     007E                     btemp	set	126	;btemp
  1354     007E                     wtemp0	set	126
  1355                           
  1356                           	psect	idloc
  1357                           
  1358                           ;Config register IDLOC0 @ 0x2000
  1359                           ;	unspecified, using default values
  1360     2000                     	org	8192
  1361     2000  3FFF               	dw	16383
  1362                           
  1363                           ;Config register IDLOC1 @ 0x2001
  1364                           ;	unspecified, using default values
  1365     2001                     	org	8193
  1366     2001  3FFF               	dw	16383
  1367                           
  1368                           ;Config register IDLOC2 @ 0x2002
  1369                           ;	unspecified, using default values
  1370     2002                     	org	8194
  1371     2002  3FFF               	dw	16383
  1372                           
  1373                           ;Config register IDLOC3 @ 0x2003
  1374                           ;	unspecified, using default values
  1375     2003                     	org	8195
  1376     2003  3FFF               	dw	16383
  1377                           
  1378                           	psect	config
  1379                           
  1380                           ;Config register CONFIG1 @ 0x2007
  1381                           ;	Oscillator Selection bits
  1382                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1383                           ;	Watchdog Timer Enable bit
  1384                           ;	WDTE = OFF, WDT disabled
  1385                           ;	Power-up Timer Enable bit
  1386                           ;	PWRTE = ON, PWRT enabled
  1387                           ;	RA5/MCLR/VPP Pin Function Select bit
  1388                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1389                           ;	Brown-out Reset Enable bit
  1390                           ;	BOREN = OFF, BOR disabled
  1391                           ;	Low-Voltage Programming Enable bit
  1392                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1393                           ;	Data EE Memory Code Protection bit
  1394                           ;	CPD = OFF, Code protection off
  1395                           ;	Flash Program Memory Write Enable bits
  1396                           ;	WRT = OFF, Write protection off
  1397                           ;	In-Circuit Debugger Mode bit
  1398                           ;	DEBUG = 0x1, unprogrammed default
  1399                           ;	CCP1 Pin Selection bit
  1400                           ;	CCPMX = RB0, CCP1 function on RB0
  1401                           ;	Flash Program Memory Code Protection bit
  1402                           ;	CP = OFF, Code protection off
  1403     2007                     	org	8199
  1404     2007  3F10               	dw	16144
  1405                           
  1406                           ;Config register CONFIG2 @ 0x2008
  1407                           ;	Fail-Safe Clock Monitor Enable bit
  1408                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1409                           ;	Internal External Switchover bit
  1410                           ;	IESO = ON, Internal External Switchover mode enabled
  1411     2008                     	org	8200
  1412     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      12
    BANK0            80      6      18
    BANK1            80      0       0
    BANK3            87      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _switchLoop->_display7Seg
    _display7Seg->___awmod

Critical Paths under _main in BANK0

    _main->_kickOut
    _kickOut->_switchLoop

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2760
                                              4 BANK0      2     2      0
                           _getValue
                            _kickOut
                           _settings
                         _switchLoop
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kickOut                                              2     2      0    1342
                                              2 BANK0      2     2      0
                           _setMotor
                         _switchLoop
 ---------------------------------------------------------------------------------
 (1) _switchLoop                                           2     2      0    1168
                                              0 BANK0      2     2      0
                        _display7Seg
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _getValue                                             2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _display7Seg                                          6     4      2     918
                                              6 COMMON     6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getValue
   _kickOut
     _setMotor
     _switchLoop
       _display7Seg
         ___awmod
       _getValue
   _settings
   _switchLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      C       C       1       92.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            57      0       0       8        0.0%
BANK3               57      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 26 11:36:05 2024

           ?_display7Seg 0077                       _BW 0020                       _iB 002A  
                     _iW 0028                      l110 0644                      l102 0786  
                    l111 0648                      l120 069B                      l114 06D4  
                    l106 0638                      l123 066D                      l375 072D  
                    l921 06E1                      l913 06D5                      l931 06FA  
                    l923 06E5                      l915 06D6                      l941 0719  
                    l933 06FE                      l925 06EA                      l917 06DA  
                    l935 0702                      l927 06F0                      l943 071F  
                    l919 06DF                      l951 062B                      l945 0724  
                    l937 070C                      l929 06F3                      l953 0631  
                    l947 0729                      l939 0712                      l971 06C6  
                    l963 069C                      l973 06C7                      l965 06BA  
                    l981 072E                      l975 06D1                      l967 06C4  
                    l959 0636                      l991 0753                      l983 0734  
                    l977 06D2                      l969 06C5                      l993 0755  
                    l985 073A                      l979 06D3                      l995 075C  
                    l987 0749                      l997 075F                      l989 0750  
                    l999 0761                      _RA0 0028                      _RA1 0029  
                    _RB0 0030                      _RA2 002A                      _RB1 0031  
                    _RA3 002B                      _RB2 0032                      _RA4 002C  
                    _RB3 0033                      _RA5 002D                      _RA6 002E  
                    _RB4 0034                      _RB5 0035                      _RA7 002F  
                    _RB6 0036                      _RB7 0037                      u300 070C  
                    u301 070B                      u320 071F                      u400 073A  
                    u321 071E                      u305 0708                      u401 0739  
                    u330 0724                      u250 06DA                      u410 0741  
                    u331 0723                      u315 0713                      u251 06D9  
                    u411 073F                      u260 06E5                      u340 0631  
                    u420 0742                      u261 06E4                      u341 0630  
                    u430 063F                      u270 06F0                      u350 06C1  
                    u431 063E                      u271 06EF                      u351 06BD  
                    u440 0695                      u441 0694                      u290 0702  
                    u370 06CE                      u450 0793                      u291 0701  
                    u371 06CA                      u507 067B                      u451 0792  
                    u364 06C4                      u460 0799                      u285 06F4  
                    u517 068A                      u461 0798                      u390 0734  
                    u470 07A3                      u391 0733                      u471 07A2  
                    u384 06D1                      u480 07A9                      u481 07A8  
                    u497 07E7             ___awmod@sign 0076                     l1011 0771  
                   l1021 0649                     l1031 065D                     l1023 064F  
                   l1017 0639                     l1009 0764                     l1041 066A  
                   l1033 0660                     l1025 0650                     l1019 063F  
                   l1051 068F                     l1043 066E                     l1035 0665  
                   l1027 0657                     l1053 0695                     l1045 0675  
                   l1037 0666                     l1029 065A                     l1061 0793  
                   l1047 0681                     l1039 0667                     l1071 07AF  
                   l1063 0799                     l1055 0787                     l1049 0684  
                   l1073 07B2                     l1065 079F                     l1057 078A  
                   l1075 07B5                     l1067 07A3                     l1059 078D  
                   l1077 07CC                     l1069 07A9                     l1099 0769  
                   _PIE2 008D                     _PIR2 000D                     _main 0787  
                   btemp 007E                     start 0001                    ?_main 0071  
        __end_of___awmod 072E             display7Seg@n 0077                    _CMCON 009C  
                  _ANSEL 009B                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086          __end_of_kickOut 069C  
                  status 0003                    wtemp0 007E          __initialization 07EF  
           __end_of_main 07EF                   ??_main 0030                   _ADCON0 001F  
                 _ADCON1 009F                   _CVRCON 009D                   _INTCON 000B  
                 _OSCCON 008F         __end_of_getValue 0639                ??___awmod 0075  
                 _lastBS 0024                   _lastSW 0022                   _lastWS 0026  
        ___awmod@divisor 0071          ___awmod@counter 0075                ??_kickOut 002E  
       __end_of_setMotor 0649         __end_of_settings 066E  __end_of__initialization 07FD  
         __pcstackCOMMON 0071               __pbssBANK0 0020               __pmaintext 0787  
         display7Seg@one 0079           display7Seg@ten 007B                ?_getValue 0071  
              ?_setMotor 0071                ?_settings 0071                  ___awmod 06D5  
                __ptext1 0649                  __ptext2 066E                  __ptext3 072E  
                __ptext4 062B                  __ptext5 069C                  __ptext6 06D5  
                __ptext7 0639                  _kickOut 066E         ___awmod@dividend 0073  
             ??_getValue 0073     end_of_initialization 07FD               ??_setMotor 0073  
             ??_settings 0071               _switchLoop 072E            ??_display7Seg 0079  
    start_initialization 07EF          getValue@current 0071      __end_of_display7Seg 06D5  
              ___latbits 0001            __pcstackBANK0 002C              ?_switchLoop 0071  
               ?___awmod 0071                 ?_kickOut 0071               setMotor@on 0071  
            _display7Seg 069C                 _getValue 062B                 _setMotor 0639  
               _settings 0649             ??_switchLoop 002C               _OPTION_REG 0081  
     __end_of_switchLoop 0787  
