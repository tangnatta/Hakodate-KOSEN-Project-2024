

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 08 12:49:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F88
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 05/01/2024 GMT
    21                           ; 
    22                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F88 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     008F                     	;# 
    89     0090                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009B                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     0105                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001E                     	;# 
   134     001F                     	;# 
   135     0081                     	;# 
   136     0085                     	;# 
   137     0086                     	;# 
   138     008C                     	;# 
   139     008D                     	;# 
   140     008E                     	;# 
   141     008F                     	;# 
   142     0090                     	;# 
   143     0092                     	;# 
   144     0093                     	;# 
   145     0094                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     0105                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     018C                     	;# 
   159     018D                     	;# 
   160     000D                     _PIR2	set	13
   161     000B                     _INTCON	set	11
   162     001F                     _ADCON0	set	31
   163     0006                     _PORTB	set	6
   164     0005                     _PORTA	set	5
   165     0034                     _RB4	set	52
   166     002F                     _RA7	set	47
   167     002E                     _RA6	set	46
   168     002D                     _RA5	set	45
   169     002C                     _RA4	set	44
   170     002B                     _RA3	set	43
   171     002A                     _RA2	set	42
   172     0029                     _RA1	set	41
   173     0028                     _RA0	set	40
   174     0037                     _RB7	set	55
   175     0030                     _RB0	set	48
   176     0032                     _RB2	set	50
   177     0031                     _RB1	set	49
   178     0033                     _RB3	set	51
   179     0035                     _RB5	set	53
   180     0036                     _RB6	set	54
   181     008D                     _PIE2	set	141
   182     009D                     _CVRCON	set	157
   183     009C                     _CMCON	set	156
   184     009F                     _ADCON1	set	159
   185     009B                     _ANSEL	set	155
   186     0086                     _TRISB	set	134
   187     0085                     _TRISA	set	133
   188     008F                     _OSCCON	set	143
   189     0081                     _OPTION_REG	set	129
   190                           
   191                           	psect	cinit
   192     07EF                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07EF                     __initialization:
   196                           
   197                           ; Clear objects allocated to BANK0
   198     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   199     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   200     07F1  01A0               	clrf	__pbssBANK0& (0+127)
   201     07F2  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   202     07F3  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   203     07F4  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   204     07F5  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   205     07F6  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   206     07F7  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   207     07F8  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   208     07F9  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   209     07FA  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   210     07FB  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   211     07FC  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   212     07FD                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215     07FD                     __end_of__initialization:
   216     07FD  0183               	clrf	3
   217     07FE  118A  2ED6         	ljmp	_main	;jump to C main() function
   218                           
   219                           	psect	bssBANK0
   220     0020                     __pbssBANK0:
   221     0020                     _BW:
   222     0020                     	ds	2
   223     0022                     _lastSW:
   224     0022                     	ds	2
   225     0024                     _lastAS:
   226     0024                     	ds	2
   227     0026                     _lastWS:
   228     0026                     	ds	2
   229     0028                     _iW:
   230     0028                     	ds	2
   231     002A                     _iA:
   232     002A                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235     0070                     __pcstackCOMMON:
   236     0070                     ?_settings:
   237     0070                     ??_settings:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ?_kickOut:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_switchLoop:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_setMotor:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_getValue:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?___awdiv:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0070                     ?___awmod:	
   259                           ; 2 bytes @ 0x0
   260                           
   261     0070                     getValue@current:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0070                     setMotor@on:	
   265                           ; 2 bytes @ 0x0
   266                           
   267     0070                     ___awdiv@divisor:	
   268                           ; 2 bytes @ 0x0
   269                           
   270     0070                     ___awmod@divisor:	
   271                           ; 2 bytes @ 0x0
   272                           
   273                           
   274                           ; 2 bytes @ 0x0
   275     0070                     	ds	2
   276     0072                     ??_getValue:
   277     0072                     ??_setMotor:	
   278                           ; 1 bytes @ 0x2
   279                           
   280     0072                     ___awdiv@dividend:	
   281                           ; 1 bytes @ 0x2
   282                           
   283     0072                     ___awmod@dividend:	
   284                           ; 2 bytes @ 0x2
   285                           
   286                           
   287                           ; 2 bytes @ 0x2
   288     0072                     	ds	2
   289     0074                     ??___awdiv:
   290     0074                     ??___awmod:	
   291                           ; 1 bytes @ 0x4
   292                           
   293     0074                     ___awdiv@counter:	
   294                           ; 1 bytes @ 0x4
   295                           
   296     0074                     ___awmod@counter:	
   297                           ; 1 bytes @ 0x4
   298                           
   299                           
   300                           ; 1 bytes @ 0x4
   301     0074                     	ds	1
   302     0075                     ___awdiv@sign:
   303     0075                     ___awmod@sign:	
   304                           ; 1 bytes @ 0x5
   305                           
   306                           
   307                           ; 1 bytes @ 0x5
   308     0075                     	ds	1
   309     0076                     ___awdiv@quotient:
   310                           
   311                           ; 2 bytes @ 0x6
   312     0076                     	ds	2
   313     0078                     ?_display7Seg:
   314     0078                     display7Seg@n:	
   315                           ; 1 bytes @ 0x8
   316                           
   317                           
   318                           ; 2 bytes @ 0x8
   319     0078                     	ds	2
   320     007A                     ??_display7Seg:
   321                           
   322                           ; 1 bytes @ 0xA
   323     007A                     	ds	2
   324     007C                     ??_switchLoop:
   325                           
   326                           ; 1 bytes @ 0xC
   327     007C                     	ds	2
   328                           
   329                           	psect	cstackBANK0
   330     002C                     __pcstackBANK0:
   331     002C                     display7Seg@one:
   332                           
   333                           ; 2 bytes @ 0x0
   334     002C                     	ds	2
   335     002E                     display7Seg@ten:
   336                           
   337                           ; 2 bytes @ 0x2
   338     002E                     	ds	2
   339     0030                     ??_kickOut:
   340                           
   341                           ; 1 bytes @ 0x4
   342     0030                     	ds	2
   343     0032                     kickOut@i:
   344                           
   345                           ; 2 bytes @ 0x6
   346     0032                     	ds	2
   347     0034                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x8
   350     0034                     	ds	2
   351                           
   352                           	psect	maintext
   353     06D6                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 90 in file "PIC16F88_test.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : B00/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   373 ;;      Params:         0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0
   375 ;;      Temps:          0       2       0       0       0
   376 ;;      Totals:         0       2       0       0       0
   377 ;;Total ram usage:        2 bytes
   378 ;; Hardware stack levels required when called: 4
   379 ;; This function calls:
   380 ;;		_getValue
   381 ;;		_kickOut
   382 ;;		_settings
   383 ;;		_switchLoop
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389     06D6                     _main:	
   390                           ;psect for function _main
   391                           
   392     06D6                     l1151:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   395                           
   396                           
   397                           ;PIC16F88_test.c: 91:     settings();
   398     06D6  118A  252E  118A   	fcall	_settings
   399     06D9                     l1153:
   400                           
   401                           ;PIC16F88_test.c: 93:     kickOut();
   402     06D9  118A  2609  118A   	fcall	_kickOut
   403     06DC                     l1155:
   404                           
   405                           ;PIC16F88_test.c: 96:         if (!RB6 && lastWS){
   406     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   407     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   408     06DE  1B06               	btfsc	6,6	;volatile
   409     06DF  2EE1               	goto	u951
   410     06E0  2EE2               	goto	u950
   411     06E1                     u951:
   412     06E1  2EF1               	goto	l1163
   413     06E2                     u950:
   414     06E2                     l1157:
   415     06E2  0826               	movf	_lastWS,w
   416     06E3  0427               	iorwf	_lastWS+1,w
   417     06E4  1903               	btfsc	3,2
   418     06E5  2EE7               	goto	u961
   419     06E6  2EE8               	goto	u960
   420     06E7                     u961:
   421     06E7  2EF1               	goto	l1163
   422     06E8                     u960:
   423     06E8                     l1159:
   424                           
   425                           ;PIC16F88_test.c: 97:             iW++;
   426     06E8  3001               	movlw	1
   427     06E9  07A8               	addwf	_iW,f
   428     06EA  1803               	skipnc
   429     06EB  0AA9               	incf	_iW+1,f
   430     06EC  3000               	movlw	0
   431     06ED  07A9               	addwf	_iW+1,f
   432     06EE                     l1161:
   433                           
   434                           ;PIC16F88_test.c: 100:             kickOut();
   435     06EE  118A  2609  118A   	fcall	_kickOut
   436     06F1                     l1163:
   437                           
   438                           ;PIC16F88_test.c: 102:         if (!RB5 && lastAS){
   439     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   440     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   441     06F3  1A86               	btfsc	6,5	;volatile
   442     06F4  2EF6               	goto	u971
   443     06F5  2EF7               	goto	u970
   444     06F6                     u971:
   445     06F6  2F03               	goto	l1169
   446     06F7                     u970:
   447     06F7                     l1165:
   448     06F7  0824               	movf	_lastAS,w
   449     06F8  0425               	iorwf	_lastAS+1,w
   450     06F9  1903               	btfsc	3,2
   451     06FA  2EFC               	goto	u981
   452     06FB  2EFD               	goto	u980
   453     06FC                     u981:
   454     06FC  2F03               	goto	l1169
   455     06FD                     u980:
   456     06FD                     l1167:
   457                           
   458                           ;PIC16F88_test.c: 103:             iA++;
   459     06FD  3001               	movlw	1
   460     06FE  07AA               	addwf	_iA,f
   461     06FF  1803               	skipnc
   462     0700  0AAB               	incf	_iA+1,f
   463     0701  3000               	movlw	0
   464     0702  07AB               	addwf	_iA+1,f
   465     0703                     l1169:
   466                           
   467                           ;PIC16F88_test.c: 106:         switchLoop();
   468     0703  118A  25AC  118A   	fcall	_switchLoop
   469     0706                     l1171:
   470                           
   471                           ;PIC16F88_test.c: 109:         lastWS = getValue(RB6);
   472     0706  1003               	clrc
   473     0707  1283               	bcf	3,5	;RP0=0, select bank0
   474     0708  1303               	bcf	3,6	;RP1=0, select bank0
   475     0709  1B06               	btfsc	6,6	;volatile
   476     070A  1403               	setc
   477     070B  3000               	movlw	0
   478     070C  1803               	skipnc
   479     070D  3001               	movlw	1
   480     070E  00B4               	movwf	??_main
   481     070F  01B5               	clrf	??_main+1
   482     0710  0834               	movf	??_main,w
   483     0711  00F0               	movwf	getValue@current
   484     0712  0835               	movf	??_main+1,w
   485     0713  00F1               	movwf	getValue@current+1
   486     0714  118A  2504  118A   	fcall	_getValue
   487     0717  0871               	movf	?_getValue+1,w
   488     0718  1283               	bcf	3,5	;RP0=0, select bank0
   489     0719  1303               	bcf	3,6	;RP1=0, select bank0
   490     071A  00A7               	movwf	_lastWS+1
   491     071B  0870               	movf	?_getValue,w
   492     071C  00A6               	movwf	_lastWS
   493     071D                     l1173:
   494                           
   495                           ;PIC16F88_test.c: 110:         lastAS = getValue(RB5);
   496     071D  1003               	clrc
   497     071E  1A86               	btfsc	6,5	;volatile
   498     071F  1403               	setc
   499     0720  3000               	movlw	0
   500     0721  1803               	skipnc
   501     0722  3001               	movlw	1
   502     0723  00B4               	movwf	??_main
   503     0724  01B5               	clrf	??_main+1
   504     0725  0834               	movf	??_main,w
   505     0726  00F0               	movwf	getValue@current
   506     0727  0835               	movf	??_main+1,w
   507     0728  00F1               	movwf	getValue@current+1
   508     0729  118A  2504  118A   	fcall	_getValue
   509     072C  0871               	movf	?_getValue+1,w
   510     072D  1283               	bcf	3,5	;RP0=0, select bank0
   511     072E  1303               	bcf	3,6	;RP1=0, select bank0
   512     072F  00A5               	movwf	_lastAS+1
   513     0730  0870               	movf	?_getValue,w
   514     0731  00A4               	movwf	_lastAS
   515     0732                     l1175:
   516                           
   517                           ;PIC16F88_test.c: 113:         _delay((unsigned long)((5)*(4000000/4000.0)));
   518     0732  3007               	movlw	7
   519     0733  1283               	bcf	3,5	;RP0=0, select bank0
   520     0734  1303               	bcf	3,6	;RP1=0, select bank0
   521     0735  00B5               	movwf	??_main+1
   522     0736  307C               	movlw	124
   523     0737  00B4               	movwf	??_main
   524     0738                     u997:
   525     0738  0BB4               	decfsz	??_main,f
   526     0739  2F38               	goto	u997
   527     073A  0BB5               	decfsz	??_main+1,f
   528     073B  2F38               	goto	u997
   529     073C  0000               	nop
   530                           
   531                           ;PIC16F88_test.c: 114:     }
   532     073D  2EDC               	goto	l1155
   533     073E  118A  2800         	ljmp	start
   534     0740                     __end_of_main:
   535                           
   536                           	psect	text1
   537     052E                     __ptext1:	
   538 ;; *************** function _settings *****************
   539 ;; Defined at:
   540 ;;		line 212 in file "PIC16F88_test.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     052E                     _settings:	
   568                           ;psect for function _settings
   569                           
   570     052E                     l1097:	
   571                           ;incstack = 0
   572                           ; Regs used in _settings: [wreg+status,2]
   573                           
   574                           
   575                           ;PIC16F88_test.c: 214:     OPTION_REG = 0b11000000;
   576     052E  30C0               	movlw	192
   577     052F  1683               	bsf	3,5	;RP0=1, select bank1
   578     0530  1303               	bcf	3,6	;RP1=0, select bank1
   579     0531  0081               	movwf	1	;volatile
   580                           
   581                           ;PIC16F88_test.c: 231:     OSCCON = 0b01100000;
   582     0532  3060               	movlw	96
   583     0533  008F               	movwf	15	;volatile
   584     0534                     l1099:
   585                           
   586                           ;PIC16F88_test.c: 246:     TRISA = 0b00000000;
   587     0534  0185               	clrf	5	;volatile
   588     0535                     l1101:
   589                           
   590                           ;PIC16F88_test.c: 258:     PORTA = 0b00000000;
   591     0535  1283               	bcf	3,5	;RP0=0, select bank0
   592     0536  1303               	bcf	3,6	;RP1=0, select bank0
   593     0537  0185               	clrf	5	;volatile
   594                           
   595                           ;PIC16F88_test.c: 271:     TRISB = 0b01111000;
   596     0538  3078               	movlw	120
   597     0539  1683               	bsf	3,5	;RP0=1, select bank1
   598     053A  1303               	bcf	3,6	;RP1=0, select bank1
   599     053B  0086               	movwf	6	;volatile
   600     053C                     l1103:
   601                           
   602                           ;PIC16F88_test.c: 283:     PORTB = 0b00000000;
   603     053C  1283               	bcf	3,5	;RP0=0, select bank0
   604     053D  1303               	bcf	3,6	;RP1=0, select bank0
   605     053E  0186               	clrf	6	;volatile
   606     053F                     l1105:
   607                           
   608                           ;PIC16F88_test.c: 296:     ANSEL = 0b00000000;
   609     053F  1683               	bsf	3,5	;RP0=1, select bank1
   610     0540  1303               	bcf	3,6	;RP1=0, select bank1
   611     0541  019B               	clrf	27	;volatile
   612     0542                     l1107:
   613                           
   614                           ;PIC16F88_test.c: 307:     ADCON0 = 0b00000000;
   615     0542  1283               	bcf	3,5	;RP0=0, select bank0
   616     0543  1303               	bcf	3,6	;RP1=0, select bank0
   617     0544  019F               	clrf	31	;volatile
   618     0545                     l1109:
   619                           
   620                           ;PIC16F88_test.c: 319:     ADCON1 = 0b00000000;
   621     0545  1683               	bsf	3,5	;RP0=1, select bank1
   622     0546  1303               	bcf	3,6	;RP1=0, select bank1
   623     0547  019F               	clrf	31	;volatile
   624                           
   625                           ;PIC16F88_test.c: 334:     CMCON = 0b00000111;
   626     0548  3007               	movlw	7
   627     0549  009C               	movwf	28	;volatile
   628     054A                     l1111:
   629                           
   630                           ;PIC16F88_test.c: 345:     CVRCON = 0b00000000;
   631     054A  019D               	clrf	29	;volatile
   632     054B                     l1113:
   633                           
   634                           ;PIC16F88_test.c: 360:     INTCON = 0b00000000;
   635     054B  018B               	clrf	11	;volatile
   636     054C                     l1115:
   637                           
   638                           ;PIC16F88_test.c: 379:     PIR2 = 0b00000000;
   639     054C  1283               	bcf	3,5	;RP0=0, select bank0
   640     054D  1303               	bcf	3,6	;RP1=0, select bank0
   641     054E  018D               	clrf	13	;volatile
   642     054F                     l1117:
   643                           
   644                           ;PIC16F88_test.c: 393:     PIE2 = 0b00000000;
   645     054F  1683               	bsf	3,5	;RP0=1, select bank1
   646     0550  1303               	bcf	3,6	;RP1=0, select bank1
   647     0551  018D               	clrf	13	;volatile
   648     0552                     l129:
   649     0552  0008               	return
   650     0553                     __end_of_settings:
   651                           
   652                           	psect	text2
   653     0609                     __ptext2:	
   654 ;; *************** function _kickOut *****************
   655 ;; Defined at:
   656 ;;		line 193 in file "PIC16F88_test.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  i               2    6[BANK0 ] int 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       2       0       0       0
   672 ;;      Temps:          0       2       0       0       0
   673 ;;      Totals:         0       4       0       0       0
   674 ;;Total ram usage:        4 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 3
   677 ;; This function calls:
   678 ;;		_setMotor
   679 ;;		_switchLoop
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     0609                     _kickOut:	
   686                           ;psect for function _kickOut
   687                           
   688     0609                     l1119:	
   689                           ;incstack = 0
   690                           ; Regs used in _kickOut: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   691                           
   692                           
   693                           ;PIC16F88_test.c: 194:     setMotor(1);
   694     0609  3001               	movlw	1
   695     060A  00F0               	movwf	setMotor@on
   696     060B  3000               	movlw	0
   697     060C  00F1               	movwf	setMotor@on+1
   698     060D  118A  2512  118A   	fcall	_setMotor
   699                           
   700                           ;PIC16F88_test.c: 195:     while (RB4==1){
   701     0610  2E1F               	goto	l1125
   702     0611                     l1121:
   703                           
   704                           ;PIC16F88_test.c: 196:         switchLoop();
   705     0611  118A  25AC  118A   	fcall	_switchLoop
   706     0614                     l1123:
   707                           
   708                           ;PIC16F88_test.c: 197:         _delay((unsigned long)((5)*(4000000/4000.0)));
   709     0614  3007               	movlw	7
   710     0615  1283               	bcf	3,5	;RP0=0, select bank0
   711     0616  1303               	bcf	3,6	;RP1=0, select bank0
   712     0617  00B1               	movwf	??_kickOut+1
   713     0618  307C               	movlw	124
   714     0619  00B0               	movwf	??_kickOut
   715     061A                     u1007:
   716     061A  0BB0               	decfsz	??_kickOut,f
   717     061B  2E1A               	goto	u1007
   718     061C  0BB1               	decfsz	??_kickOut+1,f
   719     061D  2E1A               	goto	u1007
   720     061E  0000               	nop
   721     061F                     l1125:
   722                           
   723                           ;PIC16F88_test.c: 195:     while (RB4==1){
   724     061F  1283               	bcf	3,5	;RP0=0, select bank0
   725     0620  1303               	bcf	3,6	;RP1=0, select bank0
   726     0621  1A06               	btfsc	6,4	;volatile
   727     0622  2E24               	goto	u921
   728     0623  2E25               	goto	u920
   729     0624                     u921:
   730     0624  2E11               	goto	l1121
   731     0625                     u920:
   732     0625  2E34               	goto	l1131
   733     0626                     l1127:
   734                           
   735                           ;PIC16F88_test.c: 200:         switchLoop();
   736     0626  118A  25AC  118A   	fcall	_switchLoop
   737     0629                     l1129:
   738                           
   739                           ;PIC16F88_test.c: 201:         _delay((unsigned long)((5)*(4000000/4000.0)));
   740     0629  3007               	movlw	7
   741     062A  1283               	bcf	3,5	;RP0=0, select bank0
   742     062B  1303               	bcf	3,6	;RP1=0, select bank0
   743     062C  00B1               	movwf	??_kickOut+1
   744     062D  307C               	movlw	124
   745     062E  00B0               	movwf	??_kickOut
   746     062F                     u1017:
   747     062F  0BB0               	decfsz	??_kickOut,f
   748     0630  2E2F               	goto	u1017
   749     0631  0BB1               	decfsz	??_kickOut+1,f
   750     0632  2E2F               	goto	u1017
   751     0633  0000               	nop
   752     0634                     l1131:
   753                           
   754                           ;PIC16F88_test.c: 199:     while (RB4==0){
   755     0634  1283               	bcf	3,5	;RP0=0, select bank0
   756     0635  1303               	bcf	3,6	;RP1=0, select bank0
   757     0636  1E06               	btfss	6,4	;volatile
   758     0637  2E39               	goto	u931
   759     0638  2E3A               	goto	u930
   760     0639                     u931:
   761     0639  2E26               	goto	l1127
   762     063A                     u930:
   763     063A                     l1133:
   764                           
   765                           ;PIC16F88_test.c: 203:     setMotor(2);
   766     063A  3002               	movlw	2
   767     063B  00F0               	movwf	setMotor@on
   768     063C  3000               	movlw	0
   769     063D  00F1               	movwf	setMotor@on+1
   770     063E  118A  2512  118A   	fcall	_setMotor
   771     0641                     l1135:
   772                           
   773                           ;PIC16F88_test.c: 204:     for (int i=0; i<70; i++){
   774     0641  1283               	bcf	3,5	;RP0=0, select bank0
   775     0642  1303               	bcf	3,6	;RP1=0, select bank0
   776     0643  01B2               	clrf	kickOut@i
   777     0644  01B3               	clrf	kickOut@i+1
   778     0645                     l1141:
   779                           
   780                           ;PIC16F88_test.c: 205:         switchLoop();
   781     0645  118A  25AC  118A   	fcall	_switchLoop
   782     0648                     l1143:
   783                           
   784                           ;PIC16F88_test.c: 206:         _delay((unsigned long)((5)*(4000000/4000.0)));
   785     0648  3007               	movlw	7
   786     0649  1283               	bcf	3,5	;RP0=0, select bank0
   787     064A  1303               	bcf	3,6	;RP1=0, select bank0
   788     064B  00B1               	movwf	??_kickOut+1
   789     064C  307C               	movlw	124
   790     064D  00B0               	movwf	??_kickOut
   791     064E                     u1027:
   792     064E  0BB0               	decfsz	??_kickOut,f
   793     064F  2E4E               	goto	u1027
   794     0650  0BB1               	decfsz	??_kickOut+1,f
   795     0651  2E4E               	goto	u1027
   796     0652  0000               	nop
   797     0653                     l1145:
   798                           
   799                           ;PIC16F88_test.c: 207:     }
   800     0653  3001               	movlw	1
   801     0654  1283               	bcf	3,5	;RP0=0, select bank0
   802     0655  1303               	bcf	3,6	;RP1=0, select bank0
   803     0656  07B2               	addwf	kickOut@i,f
   804     0657  1803               	skipnc
   805     0658  0AB3               	incf	kickOut@i+1,f
   806     0659  3000               	movlw	0
   807     065A  07B3               	addwf	kickOut@i+1,f
   808     065B                     l1147:
   809     065B  0833               	movf	kickOut@i+1,w
   810     065C  3A80               	xorlw	128
   811     065D  00FF               	movwf	btemp+1
   812     065E  3080               	movlw	128
   813     065F  027F               	subwf	btemp+1,w
   814     0660  1D03               	skipz
   815     0661  2E64               	goto	u945
   816     0662  3046               	movlw	70
   817     0663  0232               	subwf	kickOut@i,w
   818     0664                     u945:
   819     0664  1C03               	skipc
   820     0665  2E67               	goto	u941
   821     0666  2E68               	goto	u940
   822     0667                     u941:
   823     0667  2E45               	goto	l1141
   824     0668                     u940:
   825     0668                     l1149:
   826                           
   827                           ;PIC16F88_test.c: 208:     setMotor(0);
   828     0668  3000               	movlw	0
   829     0669  00F0               	movwf	setMotor@on
   830     066A  00F1               	movwf	setMotor@on+1
   831     066B  118A  2512  118A   	fcall	_setMotor
   832     066E                     l126:
   833     066E  0008               	return
   834     066F                     __end_of_kickOut:
   835                           
   836                           	psect	text3
   837     05AC                     __ptext3:	
   838 ;; *************** function _switchLoop *****************
   839 ;; Defined at:
   840 ;;		line 117 in file "PIC16F88_test.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          2       0       0       0       0
   857 ;;      Totals:         2       0       0       0       0
   858 ;;Total ram usage:        2 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 2
   861 ;; This function calls:
   862 ;;		_display7Seg
   863 ;;		_getValue
   864 ;; This function is called by:
   865 ;;		_main
   866 ;;		_kickOut
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870     05AC                     _switchLoop:	
   871                           ;psect for function _switchLoop
   872                           
   873     05AC                     l1053:	
   874                           ;incstack = 0
   875                           ; Regs used in _switchLoop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   876                           
   877                           
   878                           ;PIC16F88_test.c: 119:     if (RB3 && !lastSW){
   879     05AC  1283               	bcf	3,5	;RP0=0, select bank0
   880     05AD  1303               	bcf	3,6	;RP1=0, select bank0
   881     05AE  1D86               	btfss	6,3	;volatile
   882     05AF  2DB1               	goto	u861
   883     05B0  2DB2               	goto	u860
   884     05B1                     u861:
   885     05B1  2DE6               	goto	l1081
   886     05B2                     u860:
   887     05B2                     l1055:
   888     05B2  0822               	movf	_lastSW,w
   889     05B3  0423               	iorwf	_lastSW+1,w
   890     05B4  1D03               	btfss	3,2
   891     05B5  2DB7               	goto	u871
   892     05B6  2DB8               	goto	u870
   893     05B7                     u871:
   894     05B7  2DE6               	goto	l1081
   895     05B8                     u870:
   896     05B8                     l1057:
   897                           
   898                           ;PIC16F88_test.c: 120:         BW=!BW;
   899     05B8  0820               	movf	_BW,w
   900     05B9  0421               	iorwf	_BW+1,w
   901     05BA  1903               	btfsc	3,2
   902     05BB  2DBD               	goto	u881
   903     05BC  2DBF               	goto	u880
   904     05BD                     u881:
   905     05BD  3001               	movlw	1
   906     05BE  2DC0               	goto	u890
   907     05BF                     u880:
   908     05BF  3000               	movlw	0
   909     05C0                     u890:
   910     05C0  00FC               	movwf	??_switchLoop
   911     05C1  01FD               	clrf	??_switchLoop+1
   912     05C2  087C               	movf	??_switchLoop,w
   913     05C3  00A0               	movwf	_BW
   914     05C4  087D               	movf	??_switchLoop+1,w
   915     05C5  00A1               	movwf	_BW+1
   916     05C6  2DE6               	goto	l1081
   917     05C7                     l1059:
   918                           
   919                           ;PIC16F88_test.c: 127:             display7Seg(iW);
   920     05C7  0829               	movf	_iW+1,w
   921     05C8  00F9               	movwf	display7Seg@n+1
   922     05C9  0828               	movf	_iW,w
   923     05CA  00F8               	movwf	display7Seg@n
   924     05CB  118A  2740  118A   	fcall	_display7Seg
   925     05CE                     l1061:
   926                           
   927                           ;PIC16F88_test.c: 128:             RB1=1;
   928     05CE  1283               	bcf	3,5	;RP0=0, select bank0
   929     05CF  1303               	bcf	3,6	;RP1=0, select bank0
   930     05D0  1486               	bsf	6,1	;volatile
   931     05D1                     l1063:
   932                           
   933                           ;PIC16F88_test.c: 129:             RB2=0;
   934     05D1  1106               	bcf	6,2	;volatile
   935                           
   936                           ;PIC16F88_test.c: 130:             break;
   937     05D2  2DF3               	goto	l1083
   938     05D3                     l1065:
   939                           
   940                           ;PIC16F88_test.c: 134:             display7Seg(iA-iW);
   941     05D3  0828               	movf	_iW,w
   942     05D4  022A               	subwf	_iA,w
   943     05D5  00F8               	movwf	display7Seg@n
   944     05D6  0829               	movf	_iW+1,w
   945     05D7  1C03               	skipc
   946     05D8  0A29               	incf	_iW+1,w
   947     05D9  022B               	subwf	_iA+1,w
   948     05DA  00F9               	movwf	display7Seg@n+1
   949     05DB  118A  2740  118A   	fcall	_display7Seg
   950     05DE                     l1067:
   951                           
   952                           ;PIC16F88_test.c: 135:             RB1=0;
   953     05DE  1283               	bcf	3,5	;RP0=0, select bank0
   954     05DF  1303               	bcf	3,6	;RP1=0, select bank0
   955     05E0  1086               	bcf	6,1	;volatile
   956     05E1                     l1069:
   957                           
   958                           ;PIC16F88_test.c: 136:             RB2=1;
   959     05E1  1506               	bsf	6,2	;volatile
   960                           
   961                           ;PIC16F88_test.c: 137:             break;
   962     05E2  2DF3               	goto	l1083
   963     05E3                     l1071:
   964                           
   965                           ;PIC16F88_test.c: 141:             BW=0;
   966     05E3  01A0               	clrf	_BW
   967     05E4  01A1               	clrf	_BW+1
   968     05E5  2DC7               	goto	l1059
   969     05E6                     l1081:
   970                           
   971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 1, Range of values is 0 to 0
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            4     3 (average)
   977                           ; direct_byte            9     7 (fixed)
   978                           ; jumptable            260     6 (fixed)
   979                           ;	Chosen strategy is simple_byte
   980     05E6  0821               	movf	_BW+1,w
   981     05E7  3A00               	xorlw	0	; case 0
   982     05E8  1903               	skipnz
   983     05E9  2DEB               	goto	l1197
   984     05EA  2DE3               	goto	l1071
   985     05EB                     l1197:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 2, Range of values is 0 to 1
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            7     4 (average)
   992                           ; direct_byte           11     7 (fixed)
   993                           ; jumptable            260     6 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995     05EB  0820               	movf	_BW,w
   996     05EC  3A00               	xorlw	0	; case 0
   997     05ED  1903               	skipnz
   998     05EE  2DC7               	goto	l1059
   999     05EF  3A01               	xorlw	1	; case 1
  1000     05F0  1903               	skipnz
  1001     05F1  2DD3               	goto	l1065
  1002     05F2  2DE3               	goto	l1071
  1003     05F3                     l1083:
  1004                           
  1005                           ;PIC16F88_test.c: 149:     lastSW = getValue(RB3);
  1006     05F3  1003               	clrc
  1007     05F4  1986               	btfsc	6,3	;volatile
  1008     05F5  1403               	setc
  1009     05F6  3000               	movlw	0
  1010     05F7  1803               	skipnc
  1011     05F8  3001               	movlw	1
  1012     05F9  00FC               	movwf	??_switchLoop
  1013     05FA  01FD               	clrf	??_switchLoop+1
  1014     05FB  087C               	movf	??_switchLoop,w
  1015     05FC  00F0               	movwf	getValue@current
  1016     05FD  087D               	movf	??_switchLoop+1,w
  1017     05FE  00F1               	movwf	getValue@current+1
  1018     05FF  118A  2504  118A   	fcall	_getValue
  1019     0602  0871               	movf	?_getValue+1,w
  1020     0603  1283               	bcf	3,5	;RP0=0, select bank0
  1021     0604  1303               	bcf	3,6	;RP1=0, select bank0
  1022     0605  00A3               	movwf	_lastSW+1
  1023     0606  0870               	movf	?_getValue,w
  1024     0607  00A2               	movwf	_lastSW
  1025     0608                     l102:
  1026     0608  0008               	return
  1027     0609                     __end_of_switchLoop:
  1028                           
  1029                           	psect	text4
  1030     0504                     __ptext4:	
  1031 ;; *************** function _getValue *****************
  1032 ;; Defined at:
  1033 ;;		line 152 in file "PIC16F88_test.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  current         2    0[COMMON] int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  2    0[COMMON] int 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         2       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         2       0       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;;		_switchLoop
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     0504                     _getValue:	
  1062                           ;psect for function _getValue
  1063                           
  1064     0504                     l1023:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _getValue: [wreg+status,2+status,0]
  1067                           
  1068                           
  1069                           ;PIC16F88_test.c: 153:     if (current){
  1070     0504  0870               	movf	getValue@current,w
  1071     0505  0471               	iorwf	getValue@current+1,w
  1072     0506  1903               	btfsc	3,2
  1073     0507  2D09               	goto	u691
  1074     0508  2D0A               	goto	u690
  1075     0509                     u691:
  1076     0509  2D0F               	goto	l1031
  1077     050A                     u690:
  1078     050A                     l1025:
  1079                           
  1080                           ;PIC16F88_test.c: 154:         return 1;
  1081     050A  3001               	movlw	1
  1082     050B  00F0               	movwf	?_getValue
  1083     050C  3000               	movlw	0
  1084     050D  00F1               	movwf	?_getValue+1
  1085     050E  2D11               	goto	l106
  1086     050F                     l1031:
  1087                           
  1088                           ;PIC16F88_test.c: 157:         return 0;
  1089     050F  01F0               	clrf	?_getValue
  1090     0510  01F1               	clrf	?_getValue+1
  1091     0511                     l106:
  1092     0511  0008               	return
  1093     0512                     __end_of_getValue:
  1094                           
  1095                           	psect	text5
  1096     0740                     __ptext5:	
  1097 ;; *************** function _display7Seg *****************
  1098 ;; Defined at:
  1099 ;;		line 176 in file "PIC16F88_test.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  n               2    8[COMMON] int 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  ten             2    2[BANK0 ] int 
  1104 ;;  one             2    0[BANK0 ] int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         2       0       0       0       0
  1115 ;;      Locals:         0       4       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         4       4       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 1
  1121 ;; This function calls:
  1122 ;;		___awdiv
  1123 ;;		___awmod
  1124 ;; This function is called by:
  1125 ;;		_switchLoop
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129     0740                     _display7Seg:	
  1130                           ;psect for function _display7Seg
  1131                           
  1132     0740                     l1035:	
  1133                           ;incstack = 0
  1134                           ; Regs used in _display7Seg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1135                           
  1136                           
  1137                           ;PIC16F88_test.c: 177:     int one = n%10;
  1138     0740  300A               	movlw	10
  1139     0741  00F0               	movwf	___awmod@divisor
  1140     0742  3000               	movlw	0
  1141     0743  00F1               	movwf	___awmod@divisor+1
  1142     0744  0879               	movf	display7Seg@n+1,w
  1143     0745  00F3               	movwf	___awmod@dividend+1
  1144     0746  0878               	movf	display7Seg@n,w
  1145     0747  00F2               	movwf	___awmod@dividend
  1146     0748  118A  2553  118A   	fcall	___awmod
  1147     074B  0871               	movf	?___awmod+1,w
  1148     074C  1283               	bcf	3,5	;RP0=0, select bank0
  1149     074D  1303               	bcf	3,6	;RP1=0, select bank0
  1150     074E  00AD               	movwf	display7Seg@one+1
  1151     074F  0870               	movf	?___awmod,w
  1152     0750  00AC               	movwf	display7Seg@one
  1153                           
  1154                           ;PIC16F88_test.c: 178:     int ten = n/10;
  1155     0751  300A               	movlw	10
  1156     0752  00F0               	movwf	___awdiv@divisor
  1157     0753  3000               	movlw	0
  1158     0754  00F1               	movwf	___awdiv@divisor+1
  1159     0755  0879               	movf	display7Seg@n+1,w
  1160     0756  00F3               	movwf	___awdiv@dividend+1
  1161     0757  0878               	movf	display7Seg@n,w
  1162     0758  00F2               	movwf	___awdiv@dividend
  1163     0759  118A  266F  118A   	fcall	___awdiv
  1164     075C  0871               	movf	?___awdiv+1,w
  1165     075D  1283               	bcf	3,5	;RP0=0, select bank0
  1166     075E  1303               	bcf	3,6	;RP1=0, select bank0
  1167     075F  00AF               	movwf	display7Seg@ten+1
  1168     0760  0870               	movf	?___awdiv,w
  1169     0761  00AE               	movwf	display7Seg@ten
  1170     0762                     l1037:
  1171                           
  1172                           ;PIC16F88_test.c: 181:     RA0=(((one) & (1 << (0))) >> 0);
  1173     0762  182C               	btfsc	display7Seg@one,0
  1174     0763  2F65               	goto	u701
  1175     0764  2F69               	goto	u700
  1176     0765                     u701:
  1177     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0767  1405               	bsf	5,0	;volatile
  1180     0768  2F6C               	goto	u714
  1181     0769                     u700:
  1182     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1183     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1184     076B  1005               	bcf	5,0	;volatile
  1185     076C                     u714:
  1186     076C                     l1039:
  1187                           
  1188                           ;PIC16F88_test.c: 182:     RA1=(((one) & (1 << (1))) >> 1);
  1189     076C  082D               	movf	display7Seg@one+1,w
  1190     076D  00FB               	movwf	??_display7Seg+1
  1191     076E  082C               	movf	display7Seg@one,w
  1192     076F  00FA               	movwf	??_display7Seg
  1193     0770  0D7B               	rlf	??_display7Seg+1,w
  1194     0771  0CFB               	rrf	??_display7Seg+1,f
  1195     0772  0CFA               	rrf	??_display7Seg,f
  1196     0773  187A               	btfsc	??_display7Seg,0
  1197     0774  2F76               	goto	u721
  1198     0775  2F7A               	goto	u720
  1199     0776                     u721:
  1200     0776  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0777  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0778  1485               	bsf	5,1	;volatile
  1203     0779  2F7D               	goto	u734
  1204     077A                     u720:
  1205     077A  1283               	bcf	3,5	;RP0=0, select bank0
  1206     077B  1303               	bcf	3,6	;RP1=0, select bank0
  1207     077C  1085               	bcf	5,1	;volatile
  1208     077D                     u734:
  1209     077D                     l1041:
  1210                           
  1211                           ;PIC16F88_test.c: 183:     RA2=(((one) & (1 << (2))) >> 2);
  1212     077D  082D               	movf	display7Seg@one+1,w
  1213     077E  00FB               	movwf	??_display7Seg+1
  1214     077F  082C               	movf	display7Seg@one,w
  1215     0780  00FA               	movwf	??_display7Seg
  1216     0781  0D7B               	rlf	??_display7Seg+1,w
  1217     0782  0CFB               	rrf	??_display7Seg+1,f
  1218     0783  0CFA               	rrf	??_display7Seg,f
  1219     0784  0D7B               	rlf	??_display7Seg+1,w
  1220     0785  0CFB               	rrf	??_display7Seg+1,f
  1221     0786  0CFA               	rrf	??_display7Seg,f
  1222     0787  187A               	btfsc	??_display7Seg,0
  1223     0788  2F8A               	goto	u741
  1224     0789  2F8E               	goto	u740
  1225     078A                     u741:
  1226     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1227     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1228     078C  1505               	bsf	5,2	;volatile
  1229     078D  2F91               	goto	u754
  1230     078E                     u740:
  1231     078E  1283               	bcf	3,5	;RP0=0, select bank0
  1232     078F  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0790  1105               	bcf	5,2	;volatile
  1234     0791                     u754:
  1235     0791                     l1043:
  1236                           
  1237                           ;PIC16F88_test.c: 184:     RA3=(((one) & (1 << (3))) >> 3);
  1238     0791  082D               	movf	display7Seg@one+1,w
  1239     0792  00FB               	movwf	??_display7Seg+1
  1240     0793  082C               	movf	display7Seg@one,w
  1241     0794  00FA               	movwf	??_display7Seg
  1242     0795  0D7B               	rlf	??_display7Seg+1,w
  1243     0796  0CFB               	rrf	??_display7Seg+1,f
  1244     0797  0CFA               	rrf	??_display7Seg,f
  1245     0798  0D7B               	rlf	??_display7Seg+1,w
  1246     0799  0CFB               	rrf	??_display7Seg+1,f
  1247     079A  0CFA               	rrf	??_display7Seg,f
  1248     079B  0D7B               	rlf	??_display7Seg+1,w
  1249     079C  0CFB               	rrf	??_display7Seg+1,f
  1250     079D  0CFA               	rrf	??_display7Seg,f
  1251     079E  187A               	btfsc	??_display7Seg,0
  1252     079F  2FA1               	goto	u761
  1253     07A0  2FA5               	goto	u760
  1254     07A1                     u761:
  1255     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1256     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1257     07A3  1585               	bsf	5,3	;volatile
  1258     07A4  2FA8               	goto	u774
  1259     07A5                     u760:
  1260     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1261     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1262     07A7  1185               	bcf	5,3	;volatile
  1263     07A8                     u774:
  1264     07A8                     l1045:
  1265                           
  1266                           ;PIC16F88_test.c: 187:     RA4=(((ten) & (1 << (0))) >> 0);
  1267     07A8  182E               	btfsc	display7Seg@ten,0
  1268     07A9  2FAB               	goto	u781
  1269     07AA  2FAF               	goto	u780
  1270     07AB                     u781:
  1271     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1272     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1273     07AD  1605               	bsf	5,4	;volatile
  1274     07AE  2FB2               	goto	u794
  1275     07AF                     u780:
  1276     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1277     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1278     07B1  1205               	bcf	5,4	;volatile
  1279     07B2                     u794:
  1280     07B2                     l1047:
  1281                           
  1282                           ;PIC16F88_test.c: 188:     RA5=(((ten) & (1 << (1))) >> 1);
  1283     07B2  082F               	movf	display7Seg@ten+1,w
  1284     07B3  00FB               	movwf	??_display7Seg+1
  1285     07B4  082E               	movf	display7Seg@ten,w
  1286     07B5  00FA               	movwf	??_display7Seg
  1287     07B6  0D7B               	rlf	??_display7Seg+1,w
  1288     07B7  0CFB               	rrf	??_display7Seg+1,f
  1289     07B8  0CFA               	rrf	??_display7Seg,f
  1290     07B9  187A               	btfsc	??_display7Seg,0
  1291     07BA  2FBC               	goto	u801
  1292     07BB  2FC0               	goto	u800
  1293     07BC                     u801:
  1294     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1295     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1296     07BE  1685               	bsf	5,5	;volatile
  1297     07BF  2FC3               	goto	u814
  1298     07C0                     u800:
  1299     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1300     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1301     07C2  1285               	bcf	5,5	;volatile
  1302     07C3                     u814:
  1303     07C3                     l1049:
  1304                           
  1305                           ;PIC16F88_test.c: 189:     RA6=(((ten) & (1 << (2))) >> 2);
  1306     07C3  082F               	movf	display7Seg@ten+1,w
  1307     07C4  00FB               	movwf	??_display7Seg+1
  1308     07C5  082E               	movf	display7Seg@ten,w
  1309     07C6  00FA               	movwf	??_display7Seg
  1310     07C7  0D7B               	rlf	??_display7Seg+1,w
  1311     07C8  0CFB               	rrf	??_display7Seg+1,f
  1312     07C9  0CFA               	rrf	??_display7Seg,f
  1313     07CA  0D7B               	rlf	??_display7Seg+1,w
  1314     07CB  0CFB               	rrf	??_display7Seg+1,f
  1315     07CC  0CFA               	rrf	??_display7Seg,f
  1316     07CD  187A               	btfsc	??_display7Seg,0
  1317     07CE  2FD0               	goto	u821
  1318     07CF  2FD4               	goto	u820
  1319     07D0                     u821:
  1320     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1321     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1322     07D2  1705               	bsf	5,6	;volatile
  1323     07D3  2FD7               	goto	u834
  1324     07D4                     u820:
  1325     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1326     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1327     07D6  1305               	bcf	5,6	;volatile
  1328     07D7                     u834:
  1329     07D7                     l1051:
  1330                           
  1331                           ;PIC16F88_test.c: 190:     RA7=(((ten) & (1 << (3))) >> 3);
  1332     07D7  082F               	movf	display7Seg@ten+1,w
  1333     07D8  00FB               	movwf	??_display7Seg+1
  1334     07D9  082E               	movf	display7Seg@ten,w
  1335     07DA  00FA               	movwf	??_display7Seg
  1336     07DB  0D7B               	rlf	??_display7Seg+1,w
  1337     07DC  0CFB               	rrf	??_display7Seg+1,f
  1338     07DD  0CFA               	rrf	??_display7Seg,f
  1339     07DE  0D7B               	rlf	??_display7Seg+1,w
  1340     07DF  0CFB               	rrf	??_display7Seg+1,f
  1341     07E0  0CFA               	rrf	??_display7Seg,f
  1342     07E1  0D7B               	rlf	??_display7Seg+1,w
  1343     07E2  0CFB               	rrf	??_display7Seg+1,f
  1344     07E3  0CFA               	rrf	??_display7Seg,f
  1345     07E4  187A               	btfsc	??_display7Seg,0
  1346     07E5  2FE7               	goto	u841
  1347     07E6  2FEB               	goto	u840
  1348     07E7                     u841:
  1349     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1350     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1351     07E9  1785               	bsf	5,7	;volatile
  1352     07EA  2FEE               	goto	u854
  1353     07EB                     u840:
  1354     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1355     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1356     07ED  1385               	bcf	5,7	;volatile
  1357     07EE                     u854:
  1358     07EE                     l115:
  1359     07EE  0008               	return
  1360     07EF                     __end_of_display7Seg:
  1361                           
  1362                           	psect	text6
  1363     0553                     __ptext6:	
  1364 ;; *************** function ___awmod *****************
  1365 ;; Defined at:
  1366 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  divisor         2    0[COMMON] int 
  1369 ;;  dividend        2    2[COMMON] int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  sign            1    5[COMMON] unsigned char 
  1372 ;;  counter         1    4[COMMON] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    0[COMMON] int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, btemp+1
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         4       0       0       0       0
  1383 ;;      Locals:         2       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0
  1385 ;;      Totals:         6       0       0       0       0
  1386 ;;Total ram usage:        6 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_display7Seg
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     0553                     ___awmod:	
  1396                           ;psect for function ___awmod
  1397                           
  1398     0553                     l985:	
  1399                           ;incstack = 0
  1400                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1401                           
  1402     0553  01F5               	clrf	___awmod@sign
  1403     0554                     l987:
  1404     0554  1FF3               	btfss	___awmod@dividend+1,7
  1405     0555  2D57               	goto	u601
  1406     0556  2D58               	goto	u600
  1407     0557                     u601:
  1408     0557  2D5F               	goto	l993
  1409     0558                     u600:
  1410     0558                     l989:
  1411     0558  09F2               	comf	___awmod@dividend,f
  1412     0559  09F3               	comf	___awmod@dividend+1,f
  1413     055A  0AF2               	incf	___awmod@dividend,f
  1414     055B  1903               	skipnz
  1415     055C  0AF3               	incf	___awmod@dividend+1,f
  1416     055D                     l991:
  1417     055D  01F5               	clrf	___awmod@sign
  1418     055E  0AF5               	incf	___awmod@sign,f
  1419     055F                     l993:
  1420     055F  1FF1               	btfss	___awmod@divisor+1,7
  1421     0560  2D62               	goto	u611
  1422     0561  2D63               	goto	u610
  1423     0562                     u611:
  1424     0562  2D68               	goto	l997
  1425     0563                     u610:
  1426     0563                     l995:
  1427     0563  09F0               	comf	___awmod@divisor,f
  1428     0564  09F1               	comf	___awmod@divisor+1,f
  1429     0565  0AF0               	incf	___awmod@divisor,f
  1430     0566  1903               	skipnz
  1431     0567  0AF1               	incf	___awmod@divisor+1,f
  1432     0568                     l997:
  1433     0568  0870               	movf	___awmod@divisor,w
  1434     0569  0471               	iorwf	___awmod@divisor+1,w
  1435     056A  1903               	btfsc	3,2
  1436     056B  2D6D               	goto	u621
  1437     056C  2D6E               	goto	u620
  1438     056D                     u621:
  1439     056D  2D9D               	goto	l1015
  1440     056E                     u620:
  1441     056E                     l999:
  1442     056E  01F4               	clrf	___awmod@counter
  1443     056F  0AF4               	incf	___awmod@counter,f
  1444     0570  2D7C               	goto	l1005
  1445     0571                     l1001:
  1446     0571  3001               	movlw	1
  1447     0572                     u635:
  1448     0572  1003               	clrc
  1449     0573  0DF0               	rlf	___awmod@divisor,f
  1450     0574  0DF1               	rlf	___awmod@divisor+1,f
  1451     0575  3EFF               	addlw	-1
  1452     0576  1D03               	skipz
  1453     0577  2D72               	goto	u635
  1454     0578                     l1003:
  1455     0578  3001               	movlw	1
  1456     0579  00FF               	movwf	btemp+1
  1457     057A  087F               	movf	btemp+1,w
  1458     057B  07F4               	addwf	___awmod@counter,f
  1459     057C                     l1005:
  1460     057C  1FF1               	btfss	___awmod@divisor+1,7
  1461     057D  2D7F               	goto	u641
  1462     057E  2D80               	goto	u640
  1463     057F                     u641:
  1464     057F  2D71               	goto	l1001
  1465     0580                     u640:
  1466     0580                     l1007:
  1467     0580  0871               	movf	___awmod@divisor+1,w
  1468     0581  0273               	subwf	___awmod@dividend+1,w
  1469     0582  1D03               	skipz
  1470     0583  2D86               	goto	u655
  1471     0584  0870               	movf	___awmod@divisor,w
  1472     0585  0272               	subwf	___awmod@dividend,w
  1473     0586                     u655:
  1474     0586  1C03               	skipc
  1475     0587  2D89               	goto	u651
  1476     0588  2D8A               	goto	u650
  1477     0589                     u651:
  1478     0589  2D90               	goto	l1011
  1479     058A                     u650:
  1480     058A                     l1009:
  1481     058A  0870               	movf	___awmod@divisor,w
  1482     058B  02F2               	subwf	___awmod@dividend,f
  1483     058C  0871               	movf	___awmod@divisor+1,w
  1484     058D  1C03               	skipc
  1485     058E  03F3               	decf	___awmod@dividend+1,f
  1486     058F  02F3               	subwf	___awmod@dividend+1,f
  1487     0590                     l1011:
  1488     0590  3001               	movlw	1
  1489     0591                     u665:
  1490     0591  1003               	clrc
  1491     0592  0CF1               	rrf	___awmod@divisor+1,f
  1492     0593  0CF0               	rrf	___awmod@divisor,f
  1493     0594  3EFF               	addlw	-1
  1494     0595  1D03               	skipz
  1495     0596  2D91               	goto	u665
  1496     0597                     l1013:
  1497     0597  3001               	movlw	1
  1498     0598  02F4               	subwf	___awmod@counter,f
  1499     0599  1D03               	btfss	3,2
  1500     059A  2D9C               	goto	u671
  1501     059B  2D9D               	goto	u670
  1502     059C                     u671:
  1503     059C  2D80               	goto	l1007
  1504     059D                     u670:
  1505     059D                     l1015:
  1506     059D  0875               	movf	___awmod@sign,w
  1507     059E  1903               	btfsc	3,2
  1508     059F  2DA1               	goto	u681
  1509     05A0  2DA2               	goto	u680
  1510     05A1                     u681:
  1511     05A1  2DA7               	goto	l1019
  1512     05A2                     u680:
  1513     05A2                     l1017:
  1514     05A2  09F2               	comf	___awmod@dividend,f
  1515     05A3  09F3               	comf	___awmod@dividend+1,f
  1516     05A4  0AF2               	incf	___awmod@dividend,f
  1517     05A5  1903               	skipnz
  1518     05A6  0AF3               	incf	___awmod@dividend+1,f
  1519     05A7                     l1019:
  1520     05A7  0873               	movf	___awmod@dividend+1,w
  1521     05A8  00F1               	movwf	?___awmod+1
  1522     05A9  0872               	movf	___awmod@dividend,w
  1523     05AA  00F0               	movwf	?___awmod
  1524     05AB                     l381:
  1525     05AB  0008               	return
  1526     05AC                     __end_of___awmod:
  1527                           
  1528                           	psect	text7
  1529     066F                     __ptext7:	
  1530 ;; *************** function ___awdiv *****************
  1531 ;; Defined at:
  1532 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  divisor         2    0[COMMON] int 
  1535 ;;  dividend        2    2[COMMON] int 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  quotient        2    6[COMMON] int 
  1538 ;;  sign            1    5[COMMON] unsigned char 
  1539 ;;  counter         1    4[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2    0[COMMON] int 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, btemp+1
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         4       0       0       0       0
  1550 ;;      Locals:         4       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         8       0       0       0       0
  1553 ;;Total ram usage:        8 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_display7Seg
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562     066F                     ___awdiv:	
  1563                           ;psect for function ___awdiv
  1564                           
  1565     066F                     l941:	
  1566                           ;incstack = 0
  1567                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1568                           
  1569     066F  01F5               	clrf	___awdiv@sign
  1570     0670                     l943:
  1571     0670  1FF1               	btfss	___awdiv@divisor+1,7
  1572     0671  2E73               	goto	u501
  1573     0672  2E74               	goto	u500
  1574     0673                     u501:
  1575     0673  2E7B               	goto	l949
  1576     0674                     u500:
  1577     0674                     l945:
  1578     0674  09F0               	comf	___awdiv@divisor,f
  1579     0675  09F1               	comf	___awdiv@divisor+1,f
  1580     0676  0AF0               	incf	___awdiv@divisor,f
  1581     0677  1903               	skipnz
  1582     0678  0AF1               	incf	___awdiv@divisor+1,f
  1583     0679                     l947:
  1584     0679  01F5               	clrf	___awdiv@sign
  1585     067A  0AF5               	incf	___awdiv@sign,f
  1586     067B                     l949:
  1587     067B  1FF3               	btfss	___awdiv@dividend+1,7
  1588     067C  2E7E               	goto	u511
  1589     067D  2E7F               	goto	u510
  1590     067E                     u511:
  1591     067E  2E88               	goto	l955
  1592     067F                     u510:
  1593     067F                     l951:
  1594     067F  09F2               	comf	___awdiv@dividend,f
  1595     0680  09F3               	comf	___awdiv@dividend+1,f
  1596     0681  0AF2               	incf	___awdiv@dividend,f
  1597     0682  1903               	skipnz
  1598     0683  0AF3               	incf	___awdiv@dividend+1,f
  1599     0684                     l953:
  1600     0684  3001               	movlw	1
  1601     0685  00FF               	movwf	btemp+1
  1602     0686  087F               	movf	btemp+1,w
  1603     0687  06F5               	xorwf	___awdiv@sign,f
  1604     0688                     l955:
  1605     0688  01F6               	clrf	___awdiv@quotient
  1606     0689  01F7               	clrf	___awdiv@quotient+1
  1607     068A                     l957:
  1608     068A  0870               	movf	___awdiv@divisor,w
  1609     068B  0471               	iorwf	___awdiv@divisor+1,w
  1610     068C  1903               	btfsc	3,2
  1611     068D  2E8F               	goto	u521
  1612     068E  2E90               	goto	u520
  1613     068F                     u521:
  1614     068F  2EC7               	goto	l977
  1615     0690                     u520:
  1616     0690                     l959:
  1617     0690  01F4               	clrf	___awdiv@counter
  1618     0691  0AF4               	incf	___awdiv@counter,f
  1619     0692  2E9E               	goto	l965
  1620     0693                     l961:
  1621     0693  3001               	movlw	1
  1622     0694                     u535:
  1623     0694  1003               	clrc
  1624     0695  0DF0               	rlf	___awdiv@divisor,f
  1625     0696  0DF1               	rlf	___awdiv@divisor+1,f
  1626     0697  3EFF               	addlw	-1
  1627     0698  1D03               	skipz
  1628     0699  2E94               	goto	u535
  1629     069A                     l963:
  1630     069A  3001               	movlw	1
  1631     069B  00FF               	movwf	btemp+1
  1632     069C  087F               	movf	btemp+1,w
  1633     069D  07F4               	addwf	___awdiv@counter,f
  1634     069E                     l965:
  1635     069E  1FF1               	btfss	___awdiv@divisor+1,7
  1636     069F  2EA1               	goto	u541
  1637     06A0  2EA2               	goto	u540
  1638     06A1                     u541:
  1639     06A1  2E93               	goto	l961
  1640     06A2                     u540:
  1641     06A2                     l967:
  1642     06A2  3001               	movlw	1
  1643     06A3                     u555:
  1644     06A3  1003               	clrc
  1645     06A4  0DF6               	rlf	___awdiv@quotient,f
  1646     06A5  0DF7               	rlf	___awdiv@quotient+1,f
  1647     06A6  3EFF               	addlw	-1
  1648     06A7  1D03               	skipz
  1649     06A8  2EA3               	goto	u555
  1650     06A9  0871               	movf	___awdiv@divisor+1,w
  1651     06AA  0273               	subwf	___awdiv@dividend+1,w
  1652     06AB  1D03               	skipz
  1653     06AC  2EAF               	goto	u565
  1654     06AD  0870               	movf	___awdiv@divisor,w
  1655     06AE  0272               	subwf	___awdiv@dividend,w
  1656     06AF                     u565:
  1657     06AF  1C03               	skipc
  1658     06B0  2EB2               	goto	u561
  1659     06B1  2EB3               	goto	u560
  1660     06B2                     u561:
  1661     06B2  2EBA               	goto	l973
  1662     06B3                     u560:
  1663     06B3                     l969:
  1664     06B3  0870               	movf	___awdiv@divisor,w
  1665     06B4  02F2               	subwf	___awdiv@dividend,f
  1666     06B5  0871               	movf	___awdiv@divisor+1,w
  1667     06B6  1C03               	skipc
  1668     06B7  03F3               	decf	___awdiv@dividend+1,f
  1669     06B8  02F3               	subwf	___awdiv@dividend+1,f
  1670     06B9                     l971:
  1671     06B9  1476               	bsf	___awdiv@quotient,0
  1672     06BA                     l973:
  1673     06BA  3001               	movlw	1
  1674     06BB                     u575:
  1675     06BB  1003               	clrc
  1676     06BC  0CF1               	rrf	___awdiv@divisor+1,f
  1677     06BD  0CF0               	rrf	___awdiv@divisor,f
  1678     06BE  3EFF               	addlw	-1
  1679     06BF  1D03               	skipz
  1680     06C0  2EBB               	goto	u575
  1681     06C1                     l975:
  1682     06C1  3001               	movlw	1
  1683     06C2  02F4               	subwf	___awdiv@counter,f
  1684     06C3  1D03               	btfss	3,2
  1685     06C4  2EC6               	goto	u581
  1686     06C5  2EC7               	goto	u580
  1687     06C6                     u581:
  1688     06C6  2EA2               	goto	l967
  1689     06C7                     u580:
  1690     06C7                     l977:
  1691     06C7  0875               	movf	___awdiv@sign,w
  1692     06C8  1903               	btfsc	3,2
  1693     06C9  2ECB               	goto	u591
  1694     06CA  2ECC               	goto	u590
  1695     06CB                     u591:
  1696     06CB  2ED1               	goto	l981
  1697     06CC                     u590:
  1698     06CC                     l979:
  1699     06CC  09F6               	comf	___awdiv@quotient,f
  1700     06CD  09F7               	comf	___awdiv@quotient+1,f
  1701     06CE  0AF6               	incf	___awdiv@quotient,f
  1702     06CF  1903               	skipnz
  1703     06D0  0AF7               	incf	___awdiv@quotient+1,f
  1704     06D1                     l981:
  1705     06D1  0877               	movf	___awdiv@quotient+1,w
  1706     06D2  00F1               	movwf	?___awdiv+1
  1707     06D3  0876               	movf	___awdiv@quotient,w
  1708     06D4  00F0               	movwf	?___awdiv
  1709     06D5                     l368:
  1710     06D5  0008               	return
  1711     06D6                     __end_of___awdiv:
  1712                           
  1713                           	psect	text8
  1714     0512                     __ptext8:	
  1715 ;; *************** function _setMotor *****************
  1716 ;; Defined at:
  1717 ;;		line 161 in file "PIC16F88_test.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  on              2    0[COMMON] int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         2       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0
  1734 ;;      Totals:         2       0       0       0       0
  1735 ;;Total ram usage:        2 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_kickOut
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     0512                     _setMotor:	
  1745                           ;psect for function _setMotor
  1746                           
  1747     0512                     l1089:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _setMotor: [wreg+status,2+status,0]
  1750                           
  1751                           
  1752                           ;PIC16F88_test.c: 162:     if (on){
  1753     0512  0870               	movf	setMotor@on,w
  1754     0513  0471               	iorwf	setMotor@on+1,w
  1755     0514  1903               	btfsc	3,2
  1756     0515  2D17               	goto	u901
  1757     0516  2D18               	goto	u900
  1758     0517                     u901:
  1759     0517  2D1D               	goto	l1093
  1760     0518                     u900:
  1761     0518                     l1091:
  1762                           
  1763                           ;PIC16F88_test.c: 163:         RB0=0;
  1764     0518  1283               	bcf	3,5	;RP0=0, select bank0
  1765     0519  1303               	bcf	3,6	;RP1=0, select bank0
  1766     051A  1006               	bcf	6,0	;volatile
  1767                           
  1768                           ;PIC16F88_test.c: 164:         RB7=1;
  1769     051B  1786               	bsf	6,7	;volatile
  1770                           
  1771                           ;PIC16F88_test.c: 165:         return;
  1772     051C  2D2D               	goto	l111
  1773     051D                     l1093:
  1774                           
  1775                           ;PIC16F88_test.c: 167:     if (on==2){
  1776     051D  3002               	movlw	2
  1777     051E  0670               	xorwf	setMotor@on,w
  1778     051F  0471               	iorwf	setMotor@on+1,w
  1779     0520  1D03               	btfss	3,2
  1780     0521  2D23               	goto	u911
  1781     0522  2D24               	goto	u910
  1782     0523                     u911:
  1783     0523  2D29               	goto	l112
  1784     0524                     u910:
  1785     0524                     l1095:
  1786                           
  1787                           ;PIC16F88_test.c: 168:         RB0=1;
  1788     0524  1283               	bcf	3,5	;RP0=0, select bank0
  1789     0525  1303               	bcf	3,6	;RP1=0, select bank0
  1790     0526  1406               	bsf	6,0	;volatile
  1791                           
  1792                           ;PIC16F88_test.c: 169:         RB7=0;
  1793     0527  1386               	bcf	6,7	;volatile
  1794                           
  1795                           ;PIC16F88_test.c: 170:         return;
  1796     0528  2D2D               	goto	l111
  1797     0529                     l112:	
  1798                           ;PIC16F88_test.c: 171:     }
  1799                           
  1800                           
  1801                           ;PIC16F88_test.c: 172:     RB0=1;
  1802     0529  1283               	bcf	3,5	;RP0=0, select bank0
  1803     052A  1303               	bcf	3,6	;RP1=0, select bank0
  1804     052B  1406               	bsf	6,0	;volatile
  1805                           
  1806                           ;PIC16F88_test.c: 173:     RB7=1;
  1807     052C  1786               	bsf	6,7	;volatile
  1808     052D                     l111:
  1809     052D  0008               	return
  1810     052E                     __end_of_setMotor:
  1811     007E                     btemp	set	126	;btemp
  1812     007E                     wtemp0	set	126
  1813                           
  1814                           	psect	config
  1815                           
  1816                           ;Config register CONFIG1 @ 0x2007
  1817                           ;	Oscillator Selection bits
  1818                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1819                           ;	Watchdog Timer Enable bit
  1820                           ;	WDTE = OFF, WDT disabled
  1821                           ;	Power-up Timer Enable bit
  1822                           ;	PWRTE = ON, PWRT enabled
  1823                           ;	RA5/MCLR/VPP Pin Function Select bit
  1824                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1825                           ;	Brown-out Reset Enable bit
  1826                           ;	BOREN = OFF, BOR disabled
  1827                           ;	Low-Voltage Programming Enable bit
  1828                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1829                           ;	Data EE Memory Code Protection bit
  1830                           ;	CPD = OFF, Code protection off
  1831                           ;	Flash Program Memory Write Enable bits
  1832                           ;	WRT = OFF, Write protection off
  1833                           ;	In-Circuit Debugger Mode bit
  1834                           ;	DEBUG = 0x1, unprogrammed default
  1835                           ;	CCP1 Pin Selection bit
  1836                           ;	CCPMX = RB0, CCP1 function on RB0
  1837                           ;	Flash Program Memory Code Protection bit
  1838                           ;	CP = OFF, Code protection off
  1839     2007                     	org	8199
  1840     2007  3F10               	dw	16144
  1841                           
  1842                           ;Config register CONFIG2 @ 0x2008
  1843                           ;	Fail-Safe Clock Monitor Enable bit
  1844                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1845                           ;	Internal External Switchover bit
  1846                           ;	IESO = ON, Internal External Switchover mode enabled
  1847     2008                     	org	8200
  1848     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_switchLoop
    _kickOut->_switchLoop
    _switchLoop->_display7Seg
    _display7Seg->___awdiv

Critical Paths under _main in BANK0

    _main->_kickOut
    _switchLoop->_display7Seg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3768
                                              8 BANK0      2     2      0
                           _getValue
                            _kickOut
                           _settings
                         _switchLoop
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kickOut                                              4     4      0    1918
                                              4 BANK0      4     4      0
                           _setMotor
                         _switchLoop
 ---------------------------------------------------------------------------------
 (1) _switchLoop                                           2     2      0    1600
                                             12 COMMON     2     2      0
                        _display7Seg
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _getValue                                             2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _display7Seg                                          8     6      2    1350
                                              8 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             2     0      2     272
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getValue
   _kickOut
     _setMotor
     _switchLoop
       _display7Seg
         ___awdiv
         ___awmod
       _getValue
   _settings
   _switchLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 08 12:49:17 2024

           ?_display7Seg 0078                       _BW 0020             ___awdiv@sign 0075  
                     _iA 002A                       _iW 0028                      l102 0608  
                    l111 052D                      l112 0529                      l106 0511  
                    l115 07EE                      l126 066E                      l129 0552  
                    l381 05AB                      l368 06D5                      l941 066F  
                    l951 067F                      l943 0670                      l961 0693  
                    l953 0684                      l945 0674                      l971 06B9  
                    l963 069A                      l955 0688                      l947 0679  
                    l981 06D1                      l973 06BA                      l965 069E  
                    l957 068A                      l949 067B                      l975 06C1  
                    l967 06A2                      l959 0690                      l991 055D  
                    l969 06B3                      l977 06C7                      l993 055F  
                    l985 0553                      l979 06CC                      l995 0563  
                    l987 0554                      l997 0568                      l989 0558  
                    l999 056E                      _RA0 0028                      _RA1 0029  
                    _RB0 0030                      _RA2 002A                      _RB1 0031  
                    _RA3 002B                      _RB2 0032                      _RA4 002C  
                    _RB3 0033                      _RA5 002D                      _RA6 002E  
                    _RB4 0034                      _RB5 0035                      _RA7 002F  
                    _RB6 0036                      _RB7 0037                      u500 0674  
                    u501 0673                      u510 067F                      u511 067E  
                    u520 0690                      u600 0558                      u521 068F  
                    u601 0557                      u610 0563                      u611 0562  
                    u540 06A2                      u620 056E                      u700 0769  
                    u541 06A1                      u621 056D                      u701 0765  
                    u535 0694                      u560 06B3                      u640 0580  
                    u800 07C0                      u720 077A                      u561 06B2  
                    u641 057F                      u801 07BC                      u721 0776  
                    u650 058A                      u714 076C                      u555 06A3  
                    u651 0589                      u635 0572                      u900 0518  
                    u580 06C7                      u820 07D4                      u740 078E  
                    u901 0517                      u581 06C6                      u565 06AF  
                    u821 07D0                      u741 078A                      u910 0524  
                    u590 06CC                      u670 059D                      u814 07C3  
                    u734 077D                      u911 0523                      u591 06CB  
                    u575 06BB                      u671 059C                      u655 0586  
                    u680 05A2                      u840 07EB                      u760 07A5  
                    u920 0625                      u681 05A1                      u665 0591  
                    u841 07E7                      u761 07A1                      u921 0624  
                    u834 07D7                      u754 0791                      u690 050A  
                    u930 063A                      u691 0509                      u931 0639  
                    u780 07AF                      u860 05B2                      u940 0668  
                    u781 07AB                      u861 05B1                      u941 0667  
                    u854 07EE                      u774 07A8                      u870 05B8  
                    u950 06E2                      u871 05B7                      u951 06E1  
                    u880 05BF                      u960 06E8                      u881 05BD  
                    u945 0664                      u961 06E7                      u794 07B2  
                    u890 05C0                      u970 06F7                      u971 06F6  
                    u980 06FD                      u981 06FC                      u997 0738  
           ___awmod@sign 0075                     l1001 0571                     l1011 0590  
                   l1003 0578                     l1013 0597                     l1005 057C  
                   l1101 0535                     l1007 0580                     l1015 059D  
                   l1031 050F                     l1023 0504                     l1111 054A  
                   l1103 053C                     l1017 05A2                     l1009 058A  
                   l1041 077D                     l1025 050A                     l1121 0611  
                   l1113 054B                     l1105 053F                     l1019 05A7  
                   l1051 07D7                     l1043 0791                     l1035 0740  
                   l1131 0634                     l1123 0614                     l1115 054C  
                   l1107 0542                     l1045 07A8                     l1037 0762  
                   l1061 05CE                     l1053 05AC                     l1141 0645  
                   l1133 063A                     l1125 061F                     l1117 054F  
                   l1109 0545                     l1047 07B2                     l1039 076C  
                   l1071 05E3                     l1063 05D1                     l1055 05B2  
                   l1143 0648                     l1135 0641                     l1127 0626  
                   l1119 0609                     l1151 06D6                     l1049 07C3  
                   l1065 05D3                     l1057 05B8                     l1081 05E6  
                   l1145 0653                     l1129 0629                     l1161 06EE  
                   l1153 06D9                     l1091 0518                     l1067 05DE  
                   l1083 05F3                     l1059 05C7                     l1147 065B  
                   l1171 0706                     l1163 06F1                     l1155 06DC  
                   l1093 051D                     l1069 05E1                     l1149 0668  
                   l1173 071D                     l1165 06F7                     l1157 06E2  
                   l1095 0524                     l1175 0732                     l1167 06FD  
                   l1159 06E8                     l1089 0512                     l1097 052E  
                   l1169 0703                     l1099 0534                     l1197 05EB  
                   u1007 061A                     u1017 062F                     u1027 064E  
                   _PIE2 008D                     _PIR2 000D                     _main 06D6  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 06D6          __end_of___awmod 05AC             display7Seg@n 0078  
                  _CMCON 009C                    _ANSEL 009B          ___awdiv@divisor 0070  
        ___awdiv@counter 0074                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086          __end_of_kickOut 066F  
                  status 0003                    wtemp0 007E          __initialization 07EF  
           __end_of_main 0740                   ??_main 0034                   _ADCON0 001F  
                 _ADCON1 009F         ___awdiv@dividend 0072                   _CVRCON 009D  
                 _INTCON 000B                   _OSCCON 008F         __end_of_getValue 0512  
              ??___awdiv 0074                ??___awmod 0074                   _lastAS 0024  
                 _lastSW 0022                   _lastWS 0026         ___awdiv@quotient 0076  
        ___awmod@divisor 0070          ___awmod@counter 0074                ??_kickOut 0030  
       __end_of_setMotor 052E         __end_of_settings 0553  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pbssBANK0 0020               __pmaintext 06D6  
         display7Seg@one 002C           display7Seg@ten 002E                ?_getValue 0070  
              ?_setMotor 0070                ?_settings 0070                  ___awdiv 066F  
                ___awmod 0553                  __ptext1 052E                  __ptext2 0609  
                __ptext3 05AC                  __ptext4 0504                  __ptext5 0740  
                __ptext6 0553                  __ptext7 066F                  __ptext8 0512  
                _kickOut 0609         ___awmod@dividend 0072               ??_getValue 0072  
   end_of_initialization 07FD               ??_setMotor 0072               ??_settings 0070  
             _switchLoop 05AC            ??_display7Seg 007A      start_initialization 07EF  
        getValue@current 0070      __end_of_display7Seg 07EF                ___latbits 0001  
          __pcstackBANK0 002C              ?_switchLoop 0070                 ?___awdiv 0070  
               ?___awmod 0070                 ?_kickOut 0070               setMotor@on 0070  
            _display7Seg 0740                 _getValue 0504                 _setMotor 0512  
               _settings 052E                 kickOut@i 0032             ??_switchLoop 007C  
             _OPTION_REG 0081       __end_of_switchLoop 0609  
